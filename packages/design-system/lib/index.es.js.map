{"version":3,"file":"index.es.js","sources":["../../../node_modules/.pnpm/@emotion+hash@0.8.0/node_modules/@emotion/hash/dist/hash.browser.esm.js","../../../node_modules/.pnpm/@emotion+unitless@0.7.5/node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../../../node_modules/.pnpm/@emotion+memoize@0.7.5/node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../../../node_modules/.pnpm/@emotion+serialize@1.0.4/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","../../../node_modules/.pnpm/@emotion+utils@1.1.0/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","../../../node_modules/.pnpm/@emotion+css@11.9.0/node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","../src/emotion.ts","../src/manager.ts","../src/keys/border.ts","../src/keys/color.ts","../src/keys/font.ts","../src/keys/global.ts","../src/keys/icon.ts","../src/keys/renderer/code-fence.ts","../src/keys/renderer/image.ts","../src/keys/renderer/inner-editor.ts","../src/keys/renderer/input-chip.ts","../src/keys/renderer/task-list-item.ts","../src/keys/scrollbar.ts","../src/keys/shadow.ts","../src/keys/size.ts","../src/keys/index.ts","../src/utils.ts"],"sourcesContent":["/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport createEmotion, { Emotion, Options } from '@emotion/css/create-instance';\nimport { createSlice } from '@milkdown/ctx';\n\nexport type { Emotion, Options } from '@emotion/css/create-instance';\n\nexport const initEmotion = (options?: Options): Emotion => createEmotion(options);\n\nexport const emotionConfigCtx = createSlice<Options, 'EmotionConfig'>({ key: 'milkdown' }, 'EmotionConfig');\nexport const emotionCtx = createSlice<Emotion, 'Emotion'>({} as Emotion, 'Emotion');\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createContainer, createSlice, Ctx, MilkdownPlugin, Pre, Slice } from '@milkdown/ctx';\n\nimport { emotionCtx } from './emotion';\n\nexport type ThemeSlice<Ret = unknown, T = undefined> = (payload: T) => Ret | undefined;\nexport type ThemeSliceKey<Ret = unknown, T = undefined, K extends string = string> = Slice<ThemeSlice<Ret, T>, K>;\n\nexport const createThemeSliceKey = <Ret, T = undefined, K extends string = string>(key: K): ThemeSliceKey<Ret, T, K> =>\n    createSlice((() => null as unknown as Ret) as ThemeSlice<Ret, T>, key);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetRet<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<infer Ret, any, any> ? Ret : unknown;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetPayload<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, infer T, any> ? T : undefined;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetKey<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, any, infer T> ? T : undefined;\n\nexport class ThemeManager {\n    #container = createContainer();\n    #cache: Map<string, ThemeSlice> = new Map();\n    #flushListener: Set<() => void> = new Set();\n    #executor: () => void = () => {\n        /* noop */\n    };\n\n    inject<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T>): void {\n        key(this.#container.sliceMap);\n    }\n\n    has(key: ThemeSliceKey | string): boolean {\n        const name = typeof key === 'string' ? key : key.sliceName;\n        if (this.#cache.has(name)) {\n            return true;\n        }\n\n        const meta = this.#container.getSlice(key);\n\n        return meta.get()(null as never) != null;\n    }\n\n    set<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), themeSlice: ThemeSlice<Ret, Payload>): void;\n    set<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T> | string, themeSlice: ThemeSlice<Ret, T>): void;\n    set(key: ThemeSliceKey | string, themeSlice: ThemeSlice): void {\n        const name = typeof key === 'string' ? key : key.sliceName;\n        this.#cache.set(name, themeSlice as ThemeSlice);\n    }\n\n    get<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), payload: Payload): Ret {\n        const name = typeof key === 'string' ? key : (key as Key).sliceName;\n        const lazyGet = this.#cache.get(name);\n        if (lazyGet) {\n            const meta = this.#container.getSlice(key);\n            meta.set(lazyGet);\n            this.#cache.delete(key as string);\n        }\n        const meta = this.#container.getSlice(key);\n\n        return meta.get()(payload) as Ret;\n    }\n\n    onFlush(fn: () => void, callWhenRegister = true): void {\n        if (!this.#flushListener.has(fn)) {\n            this.#flushListener.add(fn);\n        }\n        if (callWhenRegister) {\n            fn();\n        }\n    }\n\n    async switch(ctx: Ctx, theme: MilkdownPlugin) {\n        const emotion = ctx.get(emotionCtx);\n        emotion.flush();\n        await theme(ctx as unknown as Pre)(ctx);\n        this.runExecutor();\n        this.#flushListener.forEach((f) => f());\n    }\n\n    flush(ctx: Ctx) {\n        const emotion = ctx.get(emotionCtx);\n        emotion.flush();\n        this.runExecutor();\n        this.#flushListener.forEach((f) => f());\n    }\n\n    setExecutor(executor: () => void): void {\n        executor();\n        this.#executor = executor;\n    }\n\n    runExecutor(): void {\n        this.#executor();\n    }\n}\n\nexport const themeManagerCtx = createSlice(new ThemeManager(), 'themeManager');\n\nexport const createThemeManager = () => new ThemeManager();\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeBorder = createThemeSliceKey<string, 'left' | 'right' | 'top' | 'bottom' | undefined, 'border'>(\n    'border',\n);\nexport type ThemeBorderType = typeof ThemeBorder;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Color } from '../types';\n\nexport const ThemeColor = createThemeSliceKey<string, [key: Color, opacity?: number]>('color');\nexport type ThemeColorType = typeof ThemeColor;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Font } from '../types';\n\nexport const ThemeFont = createThemeSliceKey<string, Font, 'font'>('font');\nexport type ThemeFontType = typeof ThemeFont;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeGlobal = createThemeSliceKey<void, undefined, 'global'>('global');\nexport type ThemeGlobalType = typeof ThemeGlobal;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Icon, IconValue } from '../types';\n\nexport const ThemeIcon = createThemeSliceKey<IconValue, Icon, 'icon'>('icon');\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype ThemeOptions = {\n    onSelectLanguage: (language: string) => void;\n    editable: () => boolean;\n    onFocus: () => void;\n    onBlur: () => void;\n    languageList: string[];\n};\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    contentDOM: HTMLElement;\n    onUpdate: (node: Node) => void;\n    onDestroy: () => void;\n};\nexport const ThemeCodeFence = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'code-fence'>('code-fence');\nexport type ThemeCodeFenceType = typeof ThemeCodeFence;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype ThemeOptions = {\n    isBlock: boolean;\n    placeholder: string;\n    onError?: (img: HTMLImageElement) => void;\n    onLoad?: (img: HTMLImageElement) => void;\n};\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    onUpdate: (node: Node) => void;\n};\n\nexport const ThemeImage = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'image'>('image');\nexport type ThemeImageType = typeof ThemeImage;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\nimport type { EditorView } from '@milkdown/prose/view';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype InnerEditorRenderer = {\n    dom: HTMLElement;\n    preview: HTMLElement;\n    editor: HTMLElement;\n    onUpdate: (node: Node, isInit: boolean) => void;\n    onFocus: (node: Node) => void;\n    onBlur: (node: Node) => void;\n    onDestroy: () => void;\n    stopEvent: (event: Event) => boolean;\n};\ntype InnerEditorOptions = {\n    view: EditorView;\n    getPos: () => number;\n    render: (content: string) => void;\n};\nexport const ThemeInnerEditor = createThemeSliceKey<InnerEditorRenderer, InnerEditorOptions, 'inner-editor'>(\n    'inner-editor',\n);\nexport type ThemeInnerEditorType = typeof ThemeInnerEditor;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose/view';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype InputChipRenderer = {\n    dom: HTMLElement;\n    update: (value: string) => void;\n    init: (editorView: EditorView) => void;\n    show: (editorView: EditorView) => void;\n    hide: () => void;\n    destroy: () => void;\n};\n\ntype InputChipOptions = {\n    width?: string;\n    isBindMode?: boolean;\n    buttonText?: string;\n    placeholder?: string;\n    calculatePosition?: (editorView: EditorView, dom: HTMLElement) => void;\n    onUpdate: (value: string) => void;\n};\n\nexport const ThemeInputChip = createThemeSliceKey<InputChipRenderer, InputChipOptions, 'input-chip'>('input-chip');\nexport type ThemeInputChipType = typeof ThemeInputChip;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose/model';\n\nimport { createThemeSliceKey } from '../../manager';\n\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    contentDOM: HTMLElement;\n    onUpdate: (node: Node) => void;\n};\ntype ThemeOptions = {\n    editable: () => boolean;\n    onChange: (selected: boolean) => void;\n};\nexport const ThemeTaskListItem = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'task-list-item'>('task-list-item');\nexport type ThemeTaskListItemType = typeof ThemeTaskListItem;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeScrollbar = createThemeSliceKey<\n    string,\n    [direction?: 'x' | 'y', type?: 'normal' | 'thin'] | undefined,\n    'scrollbar'\n>('scrollbar');\nexport type ThemeScrollbarType = typeof ThemeScrollbar;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeShadow = createThemeSliceKey<string, undefined, 'shadow'>('shadow');\nexport type ThemeShadowType = typeof ThemeShadow;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Size } from '../types';\n\nexport const ThemeSize = createThemeSliceKey<string, Size, 'size'>('size');\nexport type ThemeSizeType = typeof ThemeSize;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeSliceKey } from '../manager';\nimport { ThemeBorder } from './border';\nimport { ThemeColor } from './color';\nimport { ThemeFont } from './font';\nimport { ThemeGlobal } from './global';\nimport { ThemeIcon } from './icon';\nimport { ThemeCodeFence, ThemeImage, ThemeInnerEditor, ThemeInputChip, ThemeTaskListItem } from './renderer';\nimport { ThemeScrollbar } from './scrollbar';\nimport { ThemeShadow } from './shadow';\nimport { ThemeSize } from './size';\n\nexport const internalThemeKeys = [\n    /** Props */\n    ThemeColor,\n    ThemeSize,\n    ThemeFont,\n    ThemeScrollbar,\n    ThemeShadow,\n    ThemeBorder,\n    ThemeIcon,\n    ThemeGlobal,\n\n    /** Renderer */\n    ThemeCodeFence,\n    ThemeImage,\n    ThemeInnerEditor,\n    ThemeTaskListItem,\n    ThemeInputChip,\n] as readonly ThemeSliceKey[];\n\nexport * from './border';\nexport * from './color';\nexport * from './font';\nexport * from './global';\nexport * from './icon';\nexport * from './renderer';\nexport * from './scrollbar';\nexport * from './shadow';\nexport * from './size';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeColor } from './keys';\nimport type { ThemeManager } from './manager';\nimport type { Color } from './types';\n\ntype RGB = [number, number, number];\nexport const hex2rgb = (hex: string): RGB | null => {\n    const rgbShorthandRegex = /^([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const rgbRegex = /^([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    const parse16 = (x: string) => parseInt(x, 16);\n\n    const fullHex = hex.slice(1).replace(rgbShorthandRegex, (_, r, g, b) => {\n        return r + r + g + g + b + b;\n    });\n\n    const [ok, r = '0', g = '0', b = '0'] = fullHex.match(rgbRegex) || [];\n\n    return ok ? ([r, g, b].map(parse16) as RGB) : null;\n};\n\nexport const getPalette =\n    (manager: ThemeManager) =>\n    (color: Color, opacity = 1) =>\n        manager.get(ThemeColor, [color, opacity]);\n"],"names":["unitless","hashString"],"mappings":"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"}