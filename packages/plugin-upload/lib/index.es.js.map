{"version":3,"file":"index.es.js","sources":["../src/default-uploader.ts","../src/upload.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nimport { missingNodeInSchema } from '@milkdown/exception';\nimport type { Node } from '@milkdown/prose/model';\n\nimport type { Uploader } from './upload';\n\nconst readImageAsBase64 = (file: File): Promise<{ alt: string; src: string }> => {\n    return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.addEventListener(\n            'load',\n            () => {\n                resolve({\n                    alt: file.name,\n                    src: reader.result as string,\n                });\n            },\n            false,\n        );\n        reader.readAsDataURL(file);\n    });\n};\n\nexport const defaultUploader: Uploader = async (files, schema) => {\n    const imgs: File[] = [];\n\n    for (let i = 0; i < files.length; i++) {\n        const file = files.item(i);\n        if (!file) {\n            continue;\n        }\n\n        if (!file.type.includes('image')) {\n            continue;\n        }\n\n        imgs.push(file);\n    }\n\n    const { image } = schema.nodes;\n    if (!image) {\n        throw missingNodeInSchema('image');\n    }\n\n    const data = await Promise.all(imgs.map((img) => readImageAsBase64(img)));\n\n    return data.map(({ alt, src }) => image.createAndFill({ src, alt }) as Node);\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { schemaCtx, ThemeIcon, themeManagerCtx } from '@milkdown/core';\nimport { missingIcon } from '@milkdown/exception';\nimport { Fragment, Node, Schema } from '@milkdown/prose/model';\nimport { EditorState, Plugin, PluginKey } from '@milkdown/prose/state';\nimport { Decoration, DecorationSet, EditorView } from '@milkdown/prose/view';\nimport { createPlugin } from '@milkdown/utils';\n\nimport { defaultUploader } from './default-uploader';\n\nexport type Uploader = (files: FileList, schema: Schema) => Promise<Fragment | Node | Node[]>;\ntype Spec = { id: symbol; pos: number };\nexport type Options = {\n    uploader: Uploader;\n    enableHtmlFileUploader: boolean;\n};\nexport const key = new PluginKey('MILKDOWN_UPLOAD');\n\nexport const uploadPlugin = createPlugin<string, Options>((_, options) => {\n    const uploader = options?.uploader ?? defaultUploader;\n\n    return {\n        prosePlugins: (_, ctx) => {\n            const schema = ctx.get(schemaCtx);\n\n            const placeholderPlugin = new Plugin({\n                key,\n                state: {\n                    init() {\n                        return DecorationSet.empty;\n                    },\n                    apply(this: Plugin, tr, set) {\n                        const _set = set.map(tr.mapping, tr.doc);\n                        const action = tr.getMeta(this);\n                        if (!action) {\n                            return _set;\n                        }\n                        if (action.add) {\n                            const widget = document.createElement('span');\n                            const loadingIcon = ctx.get(themeManagerCtx).get(ThemeIcon, 'loading');\n                            if (!loadingIcon) {\n                                throw missingIcon('loading');\n                            }\n                            widget.appendChild(loadingIcon.dom);\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            const decoration = Decoration.widget(action.add.pos, widget, { id: action.add.id } as any);\n                            return _set.add(tr.doc, [decoration]);\n                        }\n                        if (action.remove) {\n                            return _set.remove(\n                                _set.find(undefined, undefined, (spec: Spec) => spec.id === action.remove.id),\n                            );\n                        }\n\n                        return _set;\n                    },\n                },\n                props: {\n                    decorations(this: Plugin, state) {\n                        return this.getState(state);\n                    },\n                },\n            });\n\n            const findPlaceholder = (state: EditorState, id: symbol): number => {\n                const decorations = placeholderPlugin.getState(state);\n                if (!decorations) return -1;\n                const found = decorations.find(undefined, undefined, (spec: Spec) => spec.id === id);\n                if (!found.length) return -1;\n                return found[0]?.from ?? -1;\n            };\n\n            const handleUpload = (view: EditorView, event: DragEvent | ClipboardEvent, files: FileList | undefined) => {\n                if (!files || files.length <= 0) {\n                    return false;\n                }\n                const id = Symbol('upload symbol');\n                const { tr } = view.state;\n                const insertPos =\n                    event instanceof DragEvent\n                        ? view.posAtCoords({ left: event.clientX, top: event.clientY })?.pos ?? tr.selection.from\n                        : tr.selection.from;\n                view.dispatch(tr.setMeta(placeholderPlugin, { add: { id, pos: insertPos } }));\n\n                uploader(files, schema)\n                    .then((fragment) => {\n                        const pos = findPlaceholder(view.state, id);\n                        if (pos < 0) return;\n\n                        view.dispatch(\n                            view.state.tr\n                                .replaceWith(pos, pos, fragment)\n                                .setMeta(placeholderPlugin, { remove: { id } }),\n                        );\n                        return;\n                    })\n                    .catch((e) => {\n                        console.error(e);\n                    });\n                return true;\n            };\n\n            const uploadPlugin = new Plugin({\n                props: {\n                    handlePaste: (view, event) => {\n                        if (!(event instanceof ClipboardEvent)) {\n                            return false;\n                        }\n\n                        if (!options?.enableHtmlFileUploader && event.clipboardData?.getData('text/html')) {\n                            return false;\n                        }\n\n                        return handleUpload(view, event, event.clipboardData?.files);\n                    },\n                    handleDrop: (view, event) => {\n                        if (!(event instanceof DragEvent)) {\n                            return false;\n                        }\n\n                        return handleUpload(view, event, event.dataTransfer?.files);\n                    },\n                },\n            });\n            return [placeholderPlugin, uploadPlugin];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { AtomList } from '@milkdown/utils';\n\nimport { uploadPlugin } from './upload';\n\nexport type { Uploader } from './upload';\nexport { key, uploadPlugin } from './upload';\n\nexport const upload = AtomList.create([uploadPlugin()]);\n"],"names":[],"mappings":"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"}