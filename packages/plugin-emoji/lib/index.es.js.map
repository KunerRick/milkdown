{"version":3,"file":"index.es.js","sources":["../src/constant.ts","../src/parse.ts","../src/filter/helper.ts","../src/filter/style.ts","../src/filter/index.ts","../src/remark-twemoji.ts","../src/node.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nexport const part = /:\\+1|:-1|:[\\w-]+/;\nexport const full = /:\\+1:|:-1:|:[\\w-]+:/;\nexport const input = /(:([^:\\s]+):)$/;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport twemoji from 'twemoji';\n\nconst setAttr = (text: string) => ({ title: text });\n\nexport const parse = (emoji: string): string => twemoji.parse(emoji, { attributes: setAttr }) as unknown as string;\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { EditorView } from '@milkdown/prose/view';\nimport type { Emoji } from 'node-emoji';\n\nimport { full, part } from '../constant';\nimport { parse } from '../parse';\n\nexport const checkTrigger = (\n    view: EditorView,\n    from: number,\n    to: number,\n    text: string,\n    setRange: (from: number, to: number) => void,\n    setSearch: (words: string) => void,\n) => {\n    if (view.composing) return false;\n    const { state } = view;\n    const $from = state.doc.resolve(from);\n    if ($from.parent.type.spec.code) return false;\n    const textBefore = (\n        $from.parent.textBetween(Math.max(0, $from.parentOffset - 10), $from.parentOffset, undefined, '\\ufffc') + text\n    ).toLowerCase();\n    if (full.test(textBefore)) {\n        return false;\n    }\n    const regex = part.exec(textBefore);\n    if (regex && regex[0] && textBefore.endsWith(regex[0])) {\n        const match = regex[0];\n        setRange(from - (match.length - text.length), to);\n        setSearch(match);\n        return true;\n    }\n    return false;\n};\n\nexport const renderDropdownList = (\n    list: Emoji[],\n    dropDown: HTMLElement,\n    $active: HTMLElement | null,\n    onConfirm: () => void,\n    setActive: (active: HTMLElement | null) => void,\n) => {\n    while (dropDown.firstChild) {\n        dropDown.firstChild.remove();\n    }\n    list.forEach(({ emoji, key }, i) => {\n        const container = document.createElement('div');\n        container.className = 'milkdown-emoji-filter_item';\n\n        const emojiSpan = document.createElement('span');\n        emojiSpan.innerHTML = parse(emoji);\n\n        emojiSpan.className = 'milkdown-emoji-filter_item-emoji';\n        const keySpan = document.createElement('span');\n        keySpan.textContent = ':' + key + ':';\n        keySpan.className = 'milkdown-emoji-filter_item-key';\n\n        container.appendChild(emojiSpan);\n        container.appendChild(keySpan);\n        dropDown.appendChild(container);\n\n        if (i === 0) {\n            container.classList.add('active');\n            setActive(container);\n        }\n\n        const onEnter = (e: MouseEvent) => {\n            if ($active) {\n                $active.classList.remove('active');\n            }\n            const { target } = e;\n            if (!(target instanceof HTMLElement)) return;\n            target.classList.add('active');\n            setActive(target);\n        };\n\n        const onLeave = (e: MouseEvent) => {\n            const { target } = e;\n            if (!(target instanceof HTMLElement)) return;\n            target.classList.remove('active');\n        };\n\n        const onClick = (e: MouseEvent) => {\n            e.preventDefault();\n            onConfirm();\n        };\n\n        container.addEventListener('mouseenter', onEnter);\n        container.addEventListener('mouseleave', onLeave);\n        container.addEventListener('mousedown', onClick);\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Color,\n    Emotion,\n    ThemeBorder,\n    ThemeColor,\n    ThemeFont,\n    ThemeManager,\n    ThemeShadow,\n    ThemeSize,\n} from '@milkdown/core';\n\nexport const injectStyle = (themeManager: ThemeManager, { css, cx }: Emotion) => {\n    const border = themeManager.get(ThemeBorder, undefined);\n    const shadow = themeManager.get(ThemeShadow, undefined);\n    const radius = themeManager.get(ThemeSize, 'radius');\n    const typography = themeManager.get(ThemeFont, 'typography');\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n\n    const style = css`\n        position: absolute;\n        &.hide {\n            display: none;\n        }\n\n        border-radius: ${radius};\n        background: ${palette('surface')};\n\n        .milkdown-emoji-filter_item {\n            display: flex;\n            gap: 8px;\n            height: 36px;\n            padding: 0 14px;\n            align-items: center;\n            justify-content: flex-start;\n            cursor: pointer;\n            line-height: 2;\n            font-family: ${typography};\n            font-size: 14px;\n            &.active {\n                background: ${palette('secondary', 0.12)};\n                color: ${palette('primary')};\n            }\n        }\n\n        .emoji {\n            height: 14px;\n            width: 14px;\n            margin: 0 1px 0 1.5px;\n            vertical-align: -1.5px;\n        }\n    `;\n    return cx(border, shadow, style);\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { missingRootElement } from '@milkdown/exception';\nimport { calculateNodePosition } from '@milkdown/prose';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { ThemeUtils } from '@milkdown/utils';\nimport nodeEmoji from 'node-emoji';\n\nimport { checkTrigger, renderDropdownList } from './helper';\nimport { injectStyle } from './style';\n\nexport const key = new PluginKey('MILKDOWN_EMOJI_FILTER');\n\nexport const filter = (utils: ThemeUtils, maxListSize: number) => {\n    let trigger = false;\n    let _from = 0;\n    let _search = '';\n    let $active: null | HTMLElement = null;\n\n    const off = () => {\n        trigger = false;\n        _from = 0;\n        _search = '';\n        $active = null;\n    };\n\n    return new Plugin({\n        key,\n        props: {\n            handleKeyDown(_, event) {\n                if (['Delete', 'Backspace'].includes(event.key)) {\n                    _search = _search.slice(0, -1);\n                    if (_search.length <= 1) {\n                        off();\n                    }\n                    return false;\n                }\n                if (!trigger) return false;\n                if (!['ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) {\n                    return false;\n                }\n                return true;\n            },\n            handleTextInput(view, from, to, text) {\n                trigger = checkTrigger(\n                    view,\n                    from,\n                    to,\n                    text,\n                    (from) => {\n                        _from = from;\n                    },\n                    (search) => {\n                        _search = search;\n                    },\n                );\n                if (!trigger) {\n                    off();\n                }\n                return false;\n            },\n        },\n        view: (editorView) => {\n            const { parentNode } = editorView.dom;\n            if (!parentNode) {\n                throw missingRootElement();\n            }\n\n            const dropDown = document.createElement('div');\n\n            dropDown.classList.add('milkdown-emoji-filter', 'hide');\n\n            utils.themeManager.onFlush(() => {\n                const className = dropDown.className\n                    .split(' ')\n                    .filter((x) => ['hide', 'milkdown-emoji-filter'].includes(x));\n                dropDown.className = className.join(' ');\n                const style = utils.getStyle((emotion) => injectStyle(utils.themeManager, emotion));\n                if (style) {\n                    style.split(' ').forEach((x) => dropDown.classList.add(x));\n                }\n            });\n\n            const replace = () => {\n                if (!$active) return;\n\n                const { tr } = editorView.state;\n                const node = editorView.state.schema.node('emoji', { html: $active.firstElementChild?.innerHTML });\n\n                editorView.dispatch(tr.delete(_from, _from + _search.length).insert(_from, node));\n                off();\n                dropDown.classList.add('hide');\n            };\n\n            parentNode.appendChild(dropDown);\n            const onKeydown = (e: Event) => {\n                if (!trigger || !(e instanceof KeyboardEvent)) return;\n\n                const { key } = e;\n\n                if (key === 'Enter') {\n                    replace();\n                    return;\n                }\n\n                if (['ArrowDown', 'ArrowUp'].includes(key)) {\n                    const next =\n                        key === 'ArrowDown'\n                            ? $active?.nextElementSibling || dropDown.firstElementChild\n                            : $active?.previousElementSibling || dropDown.lastElementChild;\n                    if ($active) {\n                        $active.classList.remove('active');\n                    }\n                    if (!next) return;\n                    next.classList.add('active');\n                    $active = next as HTMLElement;\n\n                    return;\n                }\n            };\n            const onClick = (e: Event) => {\n                if (!trigger) return;\n\n                e.stopPropagation();\n                off();\n                dropDown.classList.add('hide');\n            };\n            parentNode.addEventListener('keydown', onKeydown);\n            parentNode.addEventListener('mousedown', onClick);\n\n            return {\n                update: (view) => {\n                    const { selection } = view.state;\n\n                    if (selection.from - selection.to !== 0 || !trigger) {\n                        off();\n                        dropDown.classList.add('hide');\n                        return null;\n                    }\n                    const result = nodeEmoji.search(_search).slice(0, maxListSize);\n                    const { node } = view.domAtPos(_from);\n                    if (result.length === 0 || !node) {\n                        dropDown.classList.add('hide');\n                        return null;\n                    }\n\n                    dropDown.classList.remove('hide');\n                    renderDropdownList(result, dropDown, $active, replace, (a) => {\n                        $active = a;\n                    });\n                    calculateNodePosition(view, dropDown, (selected, target, parent) => {\n                        const $editor = dropDown.parentElement;\n                        if (!$editor) {\n                            throw missingRootElement();\n                        }\n                        const start = view.coordsAtPos(_from);\n                        let left = start.left - parent.left;\n                        let top = selected.bottom - parent.top + 14 + $editor.scrollTop;\n\n                        if (left < 0) {\n                            left = 0;\n                        }\n\n                        if (window.innerHeight - start.bottom < target.height) {\n                            top = selected.top - parent.top - target.height - 14 + $editor.scrollTop;\n                        }\n                        return [top, left];\n                    });\n\n                    return null;\n                },\n\n                destroy: () => {\n                    parentNode.removeEventListener('keydown', onKeydown);\n                    parentNode.removeEventListener('mousedown', onClick);\n                    dropDown.remove();\n                },\n            };\n        },\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport emojiRegex from 'emoji-regex';\nimport { Literal, Node, Parent } from 'unist';\n\nimport { parse } from './parse';\n\nconst regex = emojiRegex();\n\nconst isParent = (node: Node): node is Parent => !!(node as Parent).children;\nconst isLiteral = (node: Node): node is Literal => !!(node as Literal).value;\n\nfunction flatMap(ast: Node, fn: (node: Node, index: number, parent: Node | null) => Node[]) {\n    return transform(ast, 0, null)[0];\n\n    function transform(node: Node, index: number, parent: Node | null) {\n        if (isParent(node)) {\n            const out = [];\n            for (let i = 0, n = node.children.length; i < n; i++) {\n                const nthChild = node.children[i];\n                if (nthChild) {\n                    const xs = transform(nthChild, i, node);\n                    if (xs) {\n                        for (let j = 0, m = xs.length; j < m; j++) {\n                            const item = xs[j];\n                            if (item) {\n                                out.push(item);\n                            }\n                        }\n                    }\n                }\n            }\n            node.children = out;\n        }\n\n        return fn(node, index, parent);\n    }\n}\n\nexport const twemojiPlugin = () => {\n    function transformer(tree: Node) {\n        flatMap(tree, (node) => {\n            if (!isLiteral(node)) {\n                return [node];\n            }\n            const value = node.value as string;\n            const output: Literal<string>[] = [];\n            let match;\n            let str = value;\n            while ((match = regex.exec(str))) {\n                const { index } = match;\n                const emoji = match[0];\n                if (emoji) {\n                    if (index > 0) {\n                        output.push({ ...node, value: str.slice(0, index) });\n                    }\n                    output.push({ ...node, value: parse(emoji), type: 'emoji' });\n                    str = str.slice(index + emoji.length);\n                }\n            }\n            if (str.length) {\n                output.push({ ...node, value: str });\n            }\n            return output;\n        });\n    }\n    return transformer;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { RemarkPlugin } from '@milkdown/core';\nimport { expectDomTypeError } from '@milkdown/exception';\nimport { InputRule } from '@milkdown/prose/inputrules';\nimport { createNode } from '@milkdown/utils';\nimport nodeEmoji from 'node-emoji';\nimport remarkEmoji from 'remark-emoji';\n\nimport { input } from './constant';\nimport { filter } from './filter';\nimport { parse } from './parse';\nimport { twemojiPlugin } from './remark-twemoji';\n\nexport type EmojiOptions = {\n    maxListSize: number;\n};\n\nexport const emojiNode = createNode<string, EmojiOptions>((utils, options) => {\n    const getStyle = () =>\n        utils.getStyle(\n            ({ css }) => css`\n                .emoji {\n                    height: 1em;\n                    width: 1em;\n                    margin: 0 1px 0 1.5px;\n                    vertical-align: -1.5px;\n                }\n            `,\n        );\n    return {\n        id: 'emoji',\n        schema: () => ({\n            group: 'inline',\n            inline: true,\n            atom: true,\n            attrs: {\n                html: {\n                    default: '',\n                },\n            },\n            parseDOM: [\n                {\n                    tag: 'span[data-type=\"emoji\"]',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw expectDomTypeError(dom);\n                        }\n                        return { html: dom.innerHTML };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                const span = document.createElement('span');\n                span.classList.add('emoji-wrapper');\n                span.dataset['type'] = 'emoji';\n                utils.themeManager.onFlush(() => {\n                    const style = getStyle();\n                    if (style) {\n                        span.classList.add(style);\n                    }\n                });\n                span.innerHTML = node.attrs['html'];\n                return { dom: span };\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === 'emoji',\n                runner: (state, node, type) => {\n                    state.addNode(type, { html: node['value'] as string });\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === 'emoji',\n                runner: (state, node) => {\n                    const span = document.createElement('span');\n                    span.innerHTML = node.attrs['html'];\n                    const img = span.querySelector('img');\n                    const title = img?.title;\n                    span.remove();\n                    state.addNode('text', undefined, title);\n                },\n            },\n        }),\n        inputRules: (nodeType) => [\n            new InputRule(input, (state, match, start, end) => {\n                const content = match[0];\n                if (!content) return null;\n                const got = nodeEmoji.get(content);\n                if (!got || content.includes(got)) return null;\n\n                const html = parse(got);\n\n                return state.tr\n                    .setMeta('emoji', true)\n                    .replaceRangeWith(start, end, nodeType.create({ html }))\n                    .scrollIntoView();\n            }),\n        ],\n        remarkPlugins: () => [remarkEmoji as RemarkPlugin, twemojiPlugin],\n        prosePlugins: () => [filter(utils, options?.maxListSize ?? 6)],\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { AtomList } from '@milkdown/utils';\n\nimport { emojiNode } from './node';\nexport * from './node';\n\nexport const emoji = AtomList.create([emojiNode()]);\n"],"names":[],"mappings":"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"}