{"version":3,"file":"index.es.js","sources":["../src/collab-service.ts","../src/injectStyle.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Ctx,\n    DefaultValue,\n    editorViewCtx,\n    getDoc,\n    parserCtx,\n    prosePluginsCtx,\n    schemaCtx,\n    themeManagerCtx,\n} from '@milkdown/core';\nimport { ctxNotBind, missingYjsDoc } from '@milkdown/exception';\nimport { keydownHandler } from '@milkdown/prose/keymap';\nimport { Node } from '@milkdown/prose/model';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport type { DecorationAttrs } from '@milkdown/prose/view';\nimport {\n    prosemirrorToYDoc,\n    redo,\n    undo,\n    yCursorPlugin,\n    yCursorPluginKey,\n    yDocToProsemirror,\n    ySyncPlugin,\n    ySyncPluginKey,\n    yUndoPlugin,\n    yUndoPluginKey,\n} from 'y-prosemirror';\nimport { Awareness } from 'y-protocols/awareness';\nimport { applyUpdate, Doc, encodeStateAsUpdate, PermanentUserData } from 'yjs';\n\nexport type ColorDef = {\n    light: string;\n    dark: string;\n};\nexport type YSyncOpts = {\n    colors?: Array<ColorDef>;\n    colorMapping?: Map<string, ColorDef>;\n    permanentUserData?: PermanentUserData | null;\n};\nexport type yCursorOpts = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    cursorBuilder?: (arg: any) => HTMLElement;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    selectionBuilder?: (arg: any) => DecorationAttrs;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getSelection?: (arg: any) => any;\n};\nexport type yUndoOpts = {\n    protectedNodes?: Set<string>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    trackedOrigins?: any[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    undoManager?: any;\n};\n\nexport type Options = {\n    ySyncOpts?: YSyncOpts;\n    yCursorOpts?: yCursorOpts;\n    yCursorStateField?: string;\n    yUndoOpts?: yUndoOpts;\n};\n\nexport const CollabKeymapPluginKey = new PluginKey('MILKDOWN_COLLAB_KEYMAP');\n\nconst collabPluginKeys = [CollabKeymapPluginKey, ySyncPluginKey, yCursorPluginKey, yUndoPluginKey];\n\nexport class CollabService {\n    #options: Options = {};\n    #doc: Doc | null = null;\n    #awareness: Awareness | null = null;\n    #ctx: Ctx | null = null;\n    #connected = false;\n\n    #valueToNode(value: DefaultValue): Node | undefined {\n        if (!this.#ctx) throw ctxNotBind();\n\n        const schema = this.#ctx.get(schemaCtx);\n        const parser = this.#ctx.get(parserCtx);\n\n        const doc = getDoc(value, parser, schema);\n        return doc;\n    }\n\n    #createPlugins(): Plugin[] {\n        if (!this.#doc) throw missingYjsDoc();\n        const { ySyncOpts, yUndoOpts } = this.#options;\n        const type = this.#doc.getXmlFragment('prosemirror');\n        const plugins = [\n            ySyncPlugin(type, ySyncOpts),\n            yUndoPlugin(yUndoOpts),\n            new Plugin({\n                key: CollabKeymapPluginKey,\n                props: {\n                    handleKeyDown: keydownHandler({\n                        'Mod-z': undo,\n                        'Mod-y': redo,\n                        'Mod-Shift-z': redo,\n                    }),\n                },\n            }),\n        ];\n        if (this.#awareness) {\n            const { yCursorOpts, yCursorStateField } = this.#options;\n            plugins.push(yCursorPlugin(this.#awareness, yCursorOpts as Required<yCursorOpts>, yCursorStateField));\n        }\n\n        return plugins;\n    }\n\n    #flushEditor(plugins: Plugin[]) {\n        if (!this.#ctx) throw ctxNotBind();\n        this.#ctx.set(prosePluginsCtx, plugins);\n\n        const view = this.#ctx.get(editorViewCtx);\n        const newState = view.state.reconfigure({ plugins });\n        view.updateState(newState);\n\n        const theme = this.#ctx.get(themeManagerCtx);\n        theme.flush(this.#ctx);\n    }\n\n    bindCtx(ctx: Ctx) {\n        this.#ctx = ctx;\n        return this;\n    }\n\n    bindDoc(doc: Doc) {\n        this.#doc = doc;\n        return this;\n    }\n\n    setOptions(options: Options) {\n        this.#options = options;\n        return this;\n    }\n\n    mergeOptions(options: Partial<Options>) {\n        Object.assign(this.#options, options);\n        return this;\n    }\n\n    setAwareness(awareness: Awareness) {\n        this.#awareness = awareness;\n        return this;\n    }\n\n    applyTemplate(template: DefaultValue, condition?: (yDocNode: Node, templateNode: Node) => boolean) {\n        if (!this.#ctx) throw ctxNotBind();\n        if (!this.#doc) throw missingYjsDoc();\n        const conditionFn = condition || ((yDocNode) => yDocNode.textContent.length === 0);\n\n        const node = this.#valueToNode(template);\n        const schema = this.#ctx.get(schemaCtx);\n        const yDocNode = yDocToProsemirror(schema, this.#doc);\n\n        if (node && conditionFn(yDocNode, node)) {\n            const fragment = this.#doc.getXmlFragment('prosemirror');\n            fragment.delete(0, fragment.length);\n            const templateDoc = prosemirrorToYDoc(node);\n            const template = encodeStateAsUpdate(templateDoc);\n            applyUpdate(this.#doc, template);\n            templateDoc.destroy();\n        }\n\n        return this;\n    }\n\n    connect() {\n        if (!this.#ctx) throw ctxNotBind();\n        if (this.#connected) return;\n\n        const prosePlugins = this.#ctx.get(prosePluginsCtx);\n        const collabPlugins = this.#createPlugins();\n        const plugins = prosePlugins.concat(collabPlugins);\n\n        this.#flushEditor(plugins);\n        this.#connected = true;\n\n        return this;\n    }\n\n    disconnect() {\n        if (!this.#ctx) throw ctxNotBind();\n        if (!this.#connected) return this;\n\n        const prosePlugins = this.#ctx.get(prosePluginsCtx);\n        const plugins = prosePlugins.filter(\n            (plugin) => !plugin.spec.key || !collabPluginKeys.includes(plugin.spec.key),\n        );\n\n        this.#flushEditor(plugins);\n        this.#connected = false;\n\n        return this;\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Color, Emotion, ThemeBorder, ThemeColor, ThemeManager, ThemeSize } from '@milkdown/core';\n\nexport const injectStyle = (themeManager: ThemeManager, { injectGlobal }: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n    const lineWidth = themeManager.get(ThemeSize, 'lineWidth');\n    const css = injectGlobal;\n    css`\n        .milkdown .paragraph {\n            overflow: visible;\n        }\n        /* this is a rough fix for the first cursor position when the first paragraph is empty */\n        .ProseMirror > .ProseMirror-yjs-cursor:first-child {\n            margin-top: 1em;\n        }\n        .ProseMirror p:first-child,\n        .ProseMirror h1:first-child,\n        .ProseMirror h2:first-child,\n        .ProseMirror h3:first-child,\n        .ProseMirror h4:first-child,\n        .ProseMirror h5:first-child,\n        .ProseMirror h6:first-child {\n            margin-top: 1em;\n        }\n        /* This gives the remote user caret. The colors are automatically overwritten*/\n        .ProseMirror-yjs-cursor {\n            position: relative;\n            margin-left: -${lineWidth};\n            margin-right: -${lineWidth};\n            ${themeManager.get(ThemeBorder, 'left')};\n            ${themeManager.get(ThemeBorder, 'right')};\n            word-break: normal;\n            pointer-events: none;\n        }\n        /* This renders the username above the caret */\n        .ProseMirror-yjs-cursor > div {\n            position: absolute;\n            top: -1.05em;\n            left: -${lineWidth};\n            font-size: 13px;\n            background-color: ${palette('background')};\n            font-family: serif;\n            font-style: normal;\n            font-weight: normal;\n            line-height: normal;\n            user-select: none;\n            color: white;\n            padding-left: 2px;\n            padding-right: 2px;\n            white-space: nowrap;\n        }\n    `;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    createSlice,\n    createTimer,\n    EditorViewReady,\n    emotionCtx,\n    MilkdownPlugin,\n    themeManagerCtx,\n    ThemeReady,\n} from '@milkdown/core';\n\nimport { CollabService } from './collab-service';\nimport { injectStyle } from './injectStyle';\n\nexport const collabServiceCtx = createSlice(new CollabService(), 'collabServiceCtx');\nexport const CollabReady = createTimer('CollabReady');\n\nexport const collaborative: MilkdownPlugin = (pre) => {\n    const collabService = new CollabService();\n    pre.inject(collabServiceCtx, collabService).record(CollabReady);\n    return async (ctx) => {\n        await ctx.wait(ThemeReady);\n        const themeManager = ctx.get(themeManagerCtx);\n        const emotion = ctx.get(emotionCtx);\n        themeManager.onFlush(() => {\n            injectStyle(themeManager, emotion);\n        });\n\n        await ctx.wait(EditorViewReady);\n        collabService.bindCtx(ctx);\n        ctx.done(CollabReady);\n    };\n};\n\nexport { CollabService } from './collab-service';\nexport * from 'y-prosemirror';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AA+Da,MAAA,IAAwB,IAAI,EAAU,wBAAwB,GAErE,KAAmB,CAAC,GAAuB,IAAgB,IAAkB,EAAc;;AAE1F,MAAM,EAAc;AAAA,EAApB;AAOH;AAUA;AA0BA;AA1CA,eAAoB,CAAA;AACpB,eAAmB;AACnB,eAA+B;AAC/B,eAAmB;AACnB,eAAa;AAAA;AAAA,EAkDb,QAAQ,GAAU;AACd,mBAAK,GAAO,IACL;AAAA,EACX;AAAA,EAEA,QAAQ,GAAU;AACd,mBAAK,GAAO,IACL;AAAA,EACX;AAAA,EAEA,WAAW,GAAkB;AACzB,mBAAK,GAAW,IACT;AAAA,EACX;AAAA,EAEA,aAAa,GAA2B;AAC7B,kBAAA,OAAO,QAAK,IAAU,CAAO,GAC7B;AAAA,EACX;AAAA,EAEA,aAAa,GAAsB;AAC/B,mBAAK,GAAa,IACX;AAAA,EACX;AAAA,EAEA,cAAc,GAAwB,GAA6D;AAC/F,QAAI,CAAC,QAAK;AAAM,YAAM,EAAW;AACjC,QAAI,CAAC,QAAK;AAAM,YAAM,EAAc;AACpC,UAAM,IAAc,KAAc,EAAC,MAAa,EAAS,YAAY,WAAW,IAE1E,IAAO,QAAK,MAAL,WAAkB,IACzB,IAAS,QAAK,GAAK,IAAI,CAAS,GAChC,IAAW,EAAkB,GAAQ,QAAK,EAAI;AAEpD,QAAI,KAAQ,EAAY,GAAU,CAAI,GAAG;AACrC,YAAM,IAAW,QAAK,GAAK,eAAe,aAAa;AAC9C,QAAA,OAAO,GAAG,EAAS,MAAM;AAC5B,YAAA,IAAc,GAAkB,CAAI,GACpC,IAAW,GAAoB,CAAW;AACpC,SAAA,QAAK,IAAM,CAAQ,GAC/B,EAAY,QAAQ;AAAA,IACxB;AAEO,WAAA;AAAA,EACX;AAAA,EAEA,UAAU;AACN,QAAI,CAAC,QAAK;AAAM,YAAM,EAAW;AACjC,QAAI,QAAK;AAAY;AAErB,UAAM,IAAe,QAAK,GAAK,IAAI,CAAe,GAC5C,IAAgB,QAAK,MAAL,YAChB,IAAU,EAAa,OAAO,CAAa;AAEjD,mBAAK,MAAL,WAAkB,IAClB,QAAK,GAAa,KAEX;AAAA,EACX;AAAA,EAEA,aAAa;AACT,QAAI,CAAC,QAAK;AAAM,YAAM,EAAW;AACjC,QAAI,CAAC,QAAK;AAAmB,aAAA;AAG7B,UAAM,IAAU,AADK,QAAK,GAAK,IAAI,CAAe,EACrB,OACzB,CAAC,MAAW,CAAC,EAAO,KAAK,OAAO,CAAC,GAAiB,SAAS,EAAO,KAAK,GAAG,CAC9E;AAEA,mBAAK,MAAL,WAAkB,IAClB,QAAK,GAAa,KAEX;AAAA,EACX;AACJ;AAhII,mBACA,mBACA,mBACA,mBACA,mBAEA,gCAAa,GAAuC;AAChD,MAAI,CAAC,QAAK;AAAM,UAAM,EAAW;AAEjC,QAAM,IAAS,QAAK,GAAK,IAAI,CAAS,GAChC,IAAS,QAAK,GAAK,IAAI,CAAS;AAG/B,SADK,EAAO,GAAO,GAAQ,CAAM;AAE5C,GAEA,uBAA2B,WAAA;AACvB,MAAI,CAAC,QAAK;AAAM,UAAM,EAAc;AAC9B,QAAA,EAAE,cAAW,iBAAc,QAAK,IAChC,IAAO,QAAK,GAAK,eAAe,aAAa,GAC7C,IAAU;AAAA,IACZ,EAAY,GAAM,CAAS;AAAA,IAC3B,EAAY,CAAS;AAAA,IACrB,IAAI,EAAO;AAAA,MACP,KAAK;AAAA,MACL,OAAO;AAAA,QACH,eAAe,EAAe;AAAA,UAC1B,SAAS;AAAA,UACT,SAAS;AAAA,UACT,eAAe;AAAA,QAAA,CAClB;AAAA,MACL;AAAA,IAAA,CACH;AAAA,EAAA;AAEL,MAAI,QAAK,IAAY;AACX,UAAA,EAAE,gBAAa,yBAAsB,QAAK;AAChD,MAAQ,KAAK,EAAc,QAAK,IAAY,GAAsC,CAAiB,CAAC;AAAA,EACxG;AAEO,SAAA;AACX,GAEA,gCAAa,GAAmB;AAC5B,MAAI,CAAC,QAAK;AAAM,UAAM,EAAW;AAC5B,UAAA,GAAK,IAAI,GAAiB,CAAO;AAEtC,QAAM,IAAO,QAAK,GAAK,IAAI,CAAa,GAClC,IAAW,EAAK,MAAM,YAAY,EAAE,YAAS;AACnD,IAAK,YAAY,CAAQ,GAGnB,AADQ,QAAK,GAAK,IAAI,CAAe,EACrC,MAAM,QAAK,EAAI;AACzB;ACrHG,MAAM,KAAc,CAAC,GAA4B,EAAE,sBAA4B;AAC5E,QAAA,IAAU,CAAC,GAAc,IAAU,MAAM,EAAa,IAAI,GAAY,CAAC,GAAO,CAAO,CAAC,GACtF,IAAY,EAAa,IAAI,GAAW,WAAW;AAEzD,EADY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAqBY;AAAA,6BACC;AAAA,cACf,EAAa,IAAI,GAAa,MAAM;AAAA,cACpC,EAAa,IAAI,GAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQ9B;AAAA;AAAA,gCAEW,EAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYpD,GCtCa,KAAmB,EAAY,IAAI,EAAA,GAAiB,kBAAkB,GACtE,IAAc,EAAY,aAAa,GAEvC,KAAgC,CAAC,MAAQ;AAC5C,QAAA,IAAgB,IAAI;AAC1B,WAAI,OAAO,IAAkB,CAAa,EAAE,OAAO,CAAW,GACvD,OAAO,MAAQ;AACZ,UAAA,EAAI,KAAK,CAAU;AACnB,UAAA,IAAe,EAAI,IAAI,CAAe,GACtC,IAAU,EAAI,IAAI,CAAU;AAClC,MAAa,QAAQ,MAAM;AACvB,SAAY,GAAc,CAAO;AAAA,IAAA,CACpC,GAEK,MAAA,EAAI,KAAK,CAAe,GAC9B,EAAc,QAAQ,CAAG,GACzB,EAAI,KAAK,CAAW;AAAA,EAAA;AAE5B;"}