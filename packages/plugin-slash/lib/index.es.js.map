{"version":3,"file":"index.es.js","sources":["../src/style.ts","../src/utility.ts","../src/config.ts","../src/prose-plugin/props.ts","../src/item.ts","../src/prose-plugin/status.ts","../src/prose-plugin/dropdown.ts","../src/prose-plugin/input.ts","../src/prose-plugin/view.ts","../src/prose-plugin/index.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Color,\n    Emotion,\n    ThemeBorder,\n    ThemeColor,\n    ThemeFont,\n    ThemeManager,\n    ThemeScrollbar,\n    ThemeShadow,\n    ThemeSize,\n} from '@milkdown/core';\n\nconst itemStyle = (themeManager: ThemeManager, { css }: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n    return css`\n        .slash-dropdown-item {\n            display: flex;\n            gap: 32px;\n            height: 48px;\n            padding: 0 16px;\n            align-items: center;\n            justify-content: flex-start;\n            cursor: pointer;\n            line-height: 48px;\n            font-family: ${themeManager.get(ThemeFont, 'typography')};\n            font-size: 14px;\n\n            transition: all 0.2s ease-in-out;\n\n            &,\n            .icon {\n                color: ${palette('neutral', 0.87)};\n                transition: all 0.2s ease-in-out;\n            }\n\n            &.hide {\n                display: none;\n            }\n\n            &.active {\n                background: ${palette('secondary', 0.12)};\n                &,\n                .icon {\n                    color: ${palette('primary')};\n                }\n            }\n        }\n    `;\n};\n\nexport const injectStyle = (themeManager: ThemeManager, emotion: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n\n    return emotion.css`\n        width: 320px;\n        max-height: 320px;\n        overflow-y: auto;\n        border-radius: ${themeManager.get(ThemeSize, 'radius')};\n        position: absolute;\n        background: ${palette('surface')};\n\n        ${themeManager.get(ThemeBorder, undefined)}\n        ${themeManager.get(ThemeShadow, undefined)}\n        ${themeManager.get(ThemeScrollbar, undefined)}\n\n        &.hide {\n            display: none;\n        }\n\n        ${itemStyle(themeManager, emotion)}\n    `;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeIcon, ThemeManager } from '@milkdown/core';\nimport type { Icon } from '@milkdown/design-system';\nimport { missingIcon } from '@milkdown/exception';\nimport type { Node } from '@milkdown/prose/model';\nimport type { Command } from '@milkdown/prose/state';\nimport type { ThemeUtils } from '@milkdown/utils';\n\nimport { injectStyle } from './style';\n\nexport const createDropdown = (utils: ThemeUtils, className: string) => {\n    const div = document.createElement('div');\n    div.setAttribute('role', 'listbox');\n    div.setAttribute('tabindex', '-1');\n    utils.themeManager.onFlush(() => {\n        const style = utils.getStyle((emotion) => injectStyle(utils.themeManager, emotion));\n\n        if (style) {\n            div.classList.add(style);\n        }\n    });\n\n    div.classList.add(utils.getClassName({}, className), 'hide');\n\n    return div;\n};\n\ntype ItemOptions = {\n    textClassName: string;\n};\nexport const createDropdownItem = (\n    themeManager: ThemeManager,\n    text: string,\n    icon: Icon,\n    options?: Partial<ItemOptions>,\n) => {\n    const textClassName = options?.textClassName ?? 'text';\n\n    const div = document.createElement('div');\n    div.setAttribute('role', 'option');\n    div.classList.add('slash-dropdown-item');\n\n    const iconSpan = themeManager.get(ThemeIcon, icon);\n\n    if (!iconSpan) {\n        throw missingIcon(icon);\n    }\n\n    const textSpan = document.createElement('span');\n    textSpan.textContent = text;\n    textSpan.className = textClassName;\n\n    div.appendChild(iconSpan.dom);\n    div.appendChild(textSpan);\n\n    return div;\n};\n\nexport const getDepth = (node: Node) => {\n    let cur = node;\n    let depth = 0;\n    while (cur.childCount) {\n        cur = cur.child(0);\n        depth += 1;\n    }\n\n    return depth;\n};\n\nconst cleanUp: Command = (state, dispatch) => {\n    const { selection } = state;\n    const { $from } = selection;\n    const tr = state.tr.deleteRange($from.start(), $from.pos);\n    dispatch?.(tr);\n    return false;\n};\n\nexport const cleanUpAndCreateNode =\n    (createCommand: () => void): Command =>\n    (state, dispatch, view) => {\n        if (view) {\n            cleanUp(state, dispatch, view);\n            createCommand();\n        }\n        return true;\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, Ctx, schemaCtx, themeManagerCtx } from '@milkdown/core';\nimport { Node } from '@milkdown/prose/model';\nimport { EditorState } from '@milkdown/prose/state';\n\nimport { WrappedAction } from './item';\nimport { createDropdownItem } from './utility';\n\ntype Nullable<T> = T | null | undefined;\n\nexport type StatusConfig = {\n    placeholder?: Nullable<string>;\n    actions?: Nullable<WrappedAction[]>;\n};\n\nexport type StatusConfigBuilderParams = {\n    content: string;\n    isTopLevel: boolean;\n    parentNode: Node;\n    state: EditorState;\n};\n\nexport type StatusConfigBuilder = (params: StatusConfigBuilderParams) => Nullable<StatusConfig>;\n\nexport type Config = (ctx: Ctx) => StatusConfigBuilder;\n\nexport const defaultActions = (ctx: Ctx, input = '/'): WrappedAction[] => {\n    const { nodes } = ctx.get(schemaCtx);\n    const actions: Array<WrappedAction & { keyword: string[]; typeName: string }> = [\n        {\n            id: 'h1',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Large Heading', 'h1'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoHeading', 1),\n            keyword: ['h1', 'large heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'h2',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Medium Heading', 'h2'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoHeading', 2),\n            keyword: ['h2', 'medium heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'h3',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Small Heading', 'h3'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoHeading', 3),\n            keyword: ['h3', 'small heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'bulletList',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Bullet List', 'bulletList'),\n            command: () => ctx.get(commandsCtx).call('WrapInBulletList'),\n            keyword: ['bullet list', 'ul'],\n            typeName: 'bullet_list',\n        },\n        {\n            id: 'orderedList',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Ordered List', 'orderedList'),\n            command: () => ctx.get(commandsCtx).call('WrapInOrderedList'),\n            keyword: ['ordered list', 'ol'],\n            typeName: 'ordered_list',\n        },\n        {\n            id: 'taskList',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Task List', 'taskList'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoTaskList'),\n            keyword: ['task list', 'task'],\n            typeName: 'task_list_item',\n        },\n        {\n            id: 'image',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Image', 'image'),\n            command: () => ctx.get(commandsCtx).call('InsertImage'),\n            keyword: ['image'],\n            typeName: 'image',\n        },\n        {\n            id: 'blockquote',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Quote', 'quote'),\n            command: () => ctx.get(commandsCtx).call('WrapInBlockquote'),\n            keyword: ['quote', 'blockquote'],\n            typeName: 'blockquote',\n        },\n        {\n            id: 'table',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Table', 'table'),\n            command: () => ctx.get(commandsCtx).call('InsertTable'),\n            keyword: ['table'],\n            typeName: 'table',\n        },\n        {\n            id: 'code',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Code Fence', 'code'),\n            command: () => ctx.get(commandsCtx).call('TurnIntoCodeFence'),\n            keyword: ['code'],\n            typeName: 'fence',\n        },\n        {\n            id: 'divider',\n            dom: createDropdownItem(ctx.get(themeManagerCtx), 'Divide Line', 'divider'),\n            command: () => ctx.get(commandsCtx).call('InsertHr'),\n            keyword: ['divider', 'hr'],\n            typeName: 'hr',\n        },\n    ];\n\n    const userInput = input.slice(1).toLocaleLowerCase();\n\n    return actions\n        .filter((action) => !!nodes[action.typeName] && action.keyword.some((keyword) => keyword.includes(userInput)))\n        .map(({ keyword, typeName, ...action }) => action);\n};\n\nexport const defaultConfig: Config = (ctx) => {\n    return ({ content, isTopLevel }) => {\n        if (!isTopLevel) return null;\n\n        if (!content) {\n            return { placeholder: 'Type / to use the slash commands...' };\n        }\n\n        if (content.startsWith('/')) {\n            return content === '/'\n                ? {\n                      placeholder: 'Type to filter...',\n                      actions: defaultActions(ctx),\n                  }\n                : {\n                      actions: defaultActions(ctx, content),\n                  };\n        }\n\n        return null;\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Color, Emotion, ThemeColor, ThemeFont, ThemeManager } from '@milkdown/core';\nimport { findParentNode } from '@milkdown/prose';\nimport { EditorState } from '@milkdown/prose/state';\nimport { Decoration, DecorationSet, EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport type { Status } from './status';\n\nexport type Props = ReturnType<typeof createProps>;\n\nconst createEmptyStyle = (themeManager: ThemeManager, { css }: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n    const typography = themeManager.get(ThemeFont, 'typography');\n\n    return css`\n        position: relative;\n        &::before {\n            position: absolute;\n            cursor: text;\n            font-family: ${typography};\n            font-size: 14px;\n            color: ${palette('neutral', 0.6)};\n            content: attr(data-text);\n            height: 100%;\n            display: flex;\n            align-items: center;\n        }\n    `;\n};\n\nconst createSlashStyle = (_: ThemeManager, { css }: Emotion) => css`\n    &::before {\n        left: 8px;\n    }\n`;\n\nexport const createProps = (status: Status, utils: ThemeUtils) => {\n    return {\n        handleKeyDown: (_: EditorView, event: Event) => {\n            if (status.isEmpty()) {\n                return false;\n            }\n            if (!(event instanceof KeyboardEvent)) {\n                return false;\n            }\n\n            if (!['ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) {\n                return false;\n            }\n\n            return true;\n        },\n        decorations: (state: EditorState) => {\n            const paragraph = findParentNode(({ type }) => type.name === 'paragraph')(state.selection);\n            const uploadPlugin = state.plugins.find(\n                (x) => (x as unknown as { key: string }).key === 'MILKDOWN_UPLOAD$',\n            );\n            const decorations: DecorationSet = uploadPlugin?.getState(state);\n            if (decorations != null && decorations.find(state.selection.from, state.selection.to).length > 0) {\n                status.clear();\n                return null;\n            }\n\n            if (\n                !paragraph ||\n                paragraph.node.childCount > 1 ||\n                state.selection.$from.parentOffset !== paragraph.node.textContent.length ||\n                (paragraph.node.firstChild && paragraph.node.firstChild.type.name !== 'text')\n            ) {\n                status.clear();\n                return null;\n            }\n\n            const { placeholder, actions } = status.update({\n                parentNode: state.selection.$from.node(state.selection.$from.depth - 1),\n                isTopLevel: state.selection.$from.depth === 1,\n                content: paragraph.node.textContent,\n                state,\n            });\n\n            if (!placeholder) {\n                return null;\n            }\n\n            const createDecoration = (text: string, className: (string | undefined)[]) => {\n                const pos = paragraph.pos;\n                return DecorationSet.create(state.doc, [\n                    Decoration.node(pos, pos + paragraph.node.nodeSize, {\n                        class: className.filter((x) => x).join(' '),\n                        'data-text': text,\n                    }),\n                ]);\n            };\n\n            const emptyStyle = utils.getStyle((emotion) => createEmptyStyle(utils.themeManager, emotion));\n            const slashStyle = utils.getStyle((emotion) => createSlashStyle(utils.themeManager, emotion));\n\n            if (actions.length) {\n                return createDecoration(placeholder, [emptyStyle, slashStyle, 'empty-node', 'is-slash']);\n            }\n\n            return createDecoration(placeholder, [emptyStyle, 'empty-node']);\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Command } from '@milkdown/prose/state';\n\nimport { cleanUpAndCreateNode } from './utility';\n\nexport type Action = {\n    id: string;\n    $: HTMLElement;\n    command: Command;\n};\n\nexport type WrappedAction = Pick<Action, 'id'> & {\n    command: () => void;\n    dom: HTMLElement;\n};\n\nexport const transformAction = (action: WrappedAction): Action => ({\n    id: action.id,\n    $: action.dom,\n    command: cleanUpAndCreateNode(action.command),\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { StatusConfigBuilder, StatusConfigBuilderParams } from '..';\nimport { Action, transformAction } from '../item';\n\nexport type StatusCtx = {\n    placeholder: string | null;\n    actions: Action[];\n};\n\nconst createStatusCtx = (): StatusCtx => {\n    return {\n        placeholder: null,\n        actions: [],\n    };\n};\n\nexport type Status = ReturnType<typeof createStatus>;\n\nexport const createStatus = (builder: StatusConfigBuilder) => {\n    const statusCtx = createStatusCtx();\n\n    return {\n        get: () => statusCtx,\n        clear: () => {\n            statusCtx.placeholder = null;\n            statusCtx.actions = [];\n        },\n        update: (builderParams: StatusConfigBuilderParams) => {\n            const config = builder(builderParams);\n            statusCtx.placeholder = config?.placeholder ?? null;\n            statusCtx.actions = (config?.actions ?? []).map(transformAction);\n            return statusCtx;\n        },\n        isEmpty: () => statusCtx.actions.length === 0,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\n\nimport { Status } from './status';\n\ntype Listeners = {\n    mouseEnter: EventListener;\n    mouseLeave: EventListener;\n};\n\nexport const renderDropdown = (status: Status, dropdownElement: HTMLElement, listeners: Listeners): boolean => {\n    const { actions } = status.get();\n\n    if (!actions.length) {\n        dropdownElement.classList.add('hide');\n        return false;\n    }\n\n    dropdownElement.childNodes.forEach((child) => {\n        child.removeEventListener('mouseenter', listeners.mouseEnter);\n        child.removeEventListener('mouseleave', listeners.mouseLeave);\n    });\n\n    while (dropdownElement.firstChild) {\n        dropdownElement.firstChild.remove();\n    }\n\n    actions.forEach(({ $ }) => {\n        $.classList.remove('active');\n        $.addEventListener('mouseenter', listeners.mouseEnter);\n        $.addEventListener('mouseleave', listeners.mouseLeave);\n        dropdownElement.appendChild($);\n    });\n\n    dropdownElement.classList.remove('hide');\n\n    const first$ = actions[0];\n    if (first$) {\n        first$.$.classList.add('active');\n        requestAnimationFrame(() => {\n            scrollIntoView(first$.$, {\n                scrollMode: 'if-needed',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n        });\n    }\n\n    return true;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { EditorView } from '@milkdown/prose/view';\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\n\nimport { Status } from './status';\n\nexport const createMouseManager = () => {\n    let mouseLock = false;\n\n    return {\n        isLock: () => mouseLock,\n        lock: () => {\n            mouseLock = true;\n        },\n        unlock: () => {\n            mouseLock = false;\n        },\n    };\n};\nexport type MouseManager = ReturnType<typeof createMouseManager>;\n\nexport const handleMouseMove = (mouseManager: MouseManager) => () => {\n    mouseManager.unlock();\n};\n\nexport const handleMouseEnter = (status: Status, mouseManager: MouseManager) => (e: MouseEvent) => {\n    if (mouseManager.isLock()) return;\n    const { actions } = status.get();\n    const active = actions.findIndex((x) => x.$.classList.contains('active'));\n    const active$ = actions[active];\n    if (active$ && active >= 0) {\n        active$.$.classList.remove('active');\n    }\n    const { target } = e;\n    if (!(target instanceof HTMLElement)) return;\n    target.classList.add('active');\n};\n\nexport const handleMouseLeave = () => (e: MouseEvent) => {\n    const { target } = e;\n    if (!(target instanceof HTMLElement)) return;\n    target.classList.remove('active');\n};\n\nexport const handleClick =\n    (status: Status, view: EditorView, dropdownElement: HTMLElement) =>\n    (e: Event): void => {\n        const { target } = e;\n        if (!(target instanceof HTMLElement)) return;\n        if (!view) return;\n\n        const stop = () => {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n\n        const { actions } = status.get();\n\n        const el = Object.values(actions).find(({ $ }) => $.contains(target));\n        if (!el) {\n            if (status.isEmpty()) return;\n\n            status.clear();\n            dropdownElement.classList.add('hide');\n            stop();\n\n            return;\n        }\n\n        stop();\n        el.command(view.state, view.dispatch, view);\n    };\n\nexport const handleKeydown =\n    (status: Status, view: EditorView, dropdownElement: HTMLElement, mouseManager: MouseManager) => (e: Event) => {\n        if (!(e instanceof KeyboardEvent)) return;\n        if (!mouseManager.isLock()) mouseManager.lock();\n\n        const { key } = e;\n        if (status.isEmpty()) return;\n        if (!['ArrowDown', 'ArrowUp', 'Enter', 'Escape'].includes(key)) return;\n\n        const { actions } = status.get();\n\n        let active = actions.findIndex(({ $ }) => $.classList.contains('active'));\n        if (active < 0) active = 0;\n\n        const moveActive = (next: number) => {\n            const active$ = actions[active];\n            const next$ = actions[next];\n            if (!active$ || !next$) return;\n            active$.$.classList.remove('active');\n            next$.$.classList.add('active');\n            scrollIntoView(next$.$, {\n                scrollMode: 'if-needed',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n        };\n\n        if (key === 'ArrowDown') {\n            const next = active === actions.length - 1 ? 0 : active + 1;\n\n            moveActive(next);\n            return;\n        }\n\n        if (key === 'ArrowUp') {\n            const next = active === 0 ? actions.length - 1 : active - 1;\n\n            moveActive(next);\n            return;\n        }\n\n        if (key === 'Escape') {\n            if (status.isEmpty()) return;\n\n            status.clear();\n            dropdownElement.classList.add('hide');\n            return;\n        }\n\n        const active$ = actions[active];\n        if (!active$) return;\n        active$.command(view.state, view.dispatch, view);\n        active$.$.classList.remove('active');\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { missingRootElement } from '@milkdown/exception';\nimport { calculateNodePosition } from '@milkdown/prose';\nimport { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport { createDropdown } from '../utility';\nimport { renderDropdown } from './dropdown';\nimport {\n    createMouseManager,\n    handleClick,\n    handleKeydown,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleMouseMove,\n} from './input';\nimport { Status } from './status';\n\nconst calculatePosition = (view: EditorView, dropdownElement: HTMLElement) => {\n    calculateNodePosition(view, dropdownElement, (selected, target, parent) => {\n        const $editor = dropdownElement.parentElement;\n        if (!$editor) {\n            throw missingRootElement();\n        }\n\n        let left = selected.left - parent.left;\n        let top = selected.bottom - parent.top + 14 + $editor.scrollTop;\n\n        if (left < 0) {\n            left = 0;\n        }\n\n        if (parent.height + parent.top - selected.bottom < target.height) {\n            const topOffset = selected.top - parent.top - target.height - 14 + $editor.scrollTop;\n            if (topOffset > 0) {\n                top = topOffset;\n            }\n        }\n        return [top, left];\n    });\n};\n\nexport const createView = (status: Status, view: EditorView, utils: ThemeUtils, className: string) => {\n    const wrapper = view.dom.parentNode;\n    if (!wrapper) return {};\n\n    const dropdownElement = createDropdown(utils, className);\n    const mouseManager = createMouseManager();\n    wrapper.appendChild(dropdownElement);\n\n    const _mouseMove = handleMouseMove(mouseManager);\n    const _mouseDown = handleClick(status, view, dropdownElement);\n    const _keydown = handleKeydown(status, view, dropdownElement, mouseManager);\n    const _mouseEnter = handleMouseEnter(status, mouseManager);\n    const _mouseLeave = handleMouseLeave();\n\n    wrapper.addEventListener('mousemove', _mouseMove);\n    wrapper.addEventListener('mousedown', _mouseDown);\n    wrapper.addEventListener('keydown', _keydown);\n\n    return {\n        update: (view: EditorView) => {\n            const show = renderDropdown(status, dropdownElement, {\n                mouseEnter: _mouseEnter as EventListener,\n                mouseLeave: _mouseLeave as EventListener,\n            });\n\n            if (!show) return;\n\n            calculatePosition(view, dropdownElement);\n        },\n\n        destroy: () => {\n            wrapper.removeEventListener('mousemove', _mouseMove);\n            wrapper.removeEventListener('mousedown', _mouseDown);\n            wrapper.removeEventListener('keydown', _keydown);\n            dropdownElement.remove();\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport type { StatusConfigBuilder } from '..';\nimport { createProps } from './props';\nimport { createStatus } from './status';\nimport { createView } from './view';\n\nexport const key = 'MILKDOWN_SLASH';\n\nexport const createSlashPlugin = (utils: ThemeUtils, builder: StatusConfigBuilder, className: string) => {\n    const status = createStatus(builder);\n\n    return new Plugin({\n        key: new PluginKey(key),\n        props: createProps(status, utils),\n        view: (view) => createView(status, view, utils, className),\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { AtomList, createPlugin } from '@milkdown/utils';\n\nimport type { Config } from './config';\nimport { defaultConfig } from './config';\nimport { createSlashPlugin } from './prose-plugin';\n\nexport type { Config, StatusConfig, StatusConfigBuilder, StatusConfigBuilderParams } from './config';\nexport { defaultActions, defaultConfig } from './config';\nexport type { Action, WrappedAction } from './item';\nexport { createDropdownItem } from './utility';\n\nexport type Options = {\n    config: Config;\n};\n\nexport const slashPlugin = createPlugin<string, Options>((utils, options) => {\n    const slashConfig = options?.config ?? defaultConfig;\n\n    return {\n        prosePlugins: (_, ctx) => {\n            const config = slashConfig(ctx);\n\n            const plugin = createSlashPlugin(utils, config, 'slash-dropdown');\n\n            return [plugin];\n        },\n    };\n});\n\nexport const slash = AtomList.create([slashPlugin()]);\n"],"names":[],"mappings":";;;;;;;AAaA,MAAM,IAAY,CAAC,GAA4B,EAAE,aAAmB;AAC1D,QAAA,IAAU,CAAC,GAAc,IAAU,MAAM,EAAa,IAAI,GAAY,CAAC,GAAO,CAAO,CAAC;AACrF,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAUgB,EAAa,IAAI,GAAW,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAO1C,EAAQ,WAAW,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BASlB,EAAQ,aAAa,IAAI;AAAA;AAAA;AAAA,6BAG1B,EAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAK9C,GAEa,IAAc,CAAC,GAA4B,MAAqB;AACnE,QAAA,IAAU,CAAC,GAAc,IAAU,MAAM,EAAa,IAAI,GAAY,CAAC,GAAO,CAAO,CAAC;AAE5F,SAAO,EAAQ;AAAA;AAAA;AAAA;AAAA,yBAIM,EAAa,IAAI,GAAW,QAAQ;AAAA;AAAA,sBAEvC,EAAQ,SAAS;AAAA;AAAA,UAE7B,EAAa,IAAI,GAAa,MAAS;AAAA,UACvC,EAAa,IAAI,GAAa,MAAS;AAAA,UACvC,EAAa,IAAI,GAAgB,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAM1C,EAAU,GAAc,CAAO;AAAA;AAEzC,GC9Da,IAAiB,CAAC,GAAmB,MAAsB;AAC9D,QAAA,IAAM,SAAS,cAAc,KAAK;AACpC,WAAA,aAAa,QAAQ,SAAS,GAC9B,EAAA,aAAa,YAAY,IAAI,GAC3B,EAAA,aAAa,QAAQ,MAAM;AACvB,UAAA,IAAQ,EAAM,SAAS,CAAC,MAAY,EAAY,EAAM,cAAc,CAAO,CAAC;AAElF,IAAI,KACI,EAAA,UAAU,IAAI,CAAK;AAAA,EAC3B,CACH,GAEG,EAAA,UAAU,IAAI,EAAM,aAAa,IAAI,CAAS,GAAG,MAAM,GAEpD;AACX,GAKa,IAAqB,CAC9B,GACA,GACA,GACA,MACC;;AACK,QAAA,IAAgB,4BAAS,kBAAT,WAA0B,QAE1C,IAAM,SAAS,cAAc,KAAK;AACpC,IAAA,aAAa,QAAQ,QAAQ,GAC7B,EAAA,UAAU,IAAI,qBAAqB;AAEvC,QAAM,IAAW,EAAa,IAAI,GAAW,CAAI;AAEjD,MAAI,CAAC;AACD,UAAM,EAAY,CAAI;AAGpB,QAAA,IAAW,SAAS,cAAc,MAAM;AAC9C,WAAS,cAAc,GACvB,EAAS,YAAY,GAEjB,EAAA,YAAY,EAAS,GAAG,GAC5B,EAAI,YAAY,CAAQ,GAEjB;AACX,GAaM,IAAmB,CAAC,GAAO,MAAa;AAC1C,QAAM,EAAE,iBAAc,GAChB,EAAE,aAAU,GACZ,IAAK,EAAM,GAAG,YAAY,EAAM,MAAM,GAAG,EAAM,GAAG;AACxD,wBAAW,IACJ;AACX,GAEa,IACT,CAAC,MACD,CAAC,GAAO,GAAU,MACV,MACQ,GAAA,GAAO,CAAc,GACf,MAEX,KC1DF,IAAiB,CAAC,GAAU,IAAQ,QAAyB;AACtE,QAAM,EAAE,aAAU,EAAI,IAAI,CAAS,GAC7B,IAA0E;AAAA,IAC5E;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,iBAAiB,IAAI;AAAA,MACvE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,mBAAmB,CAAC;AAAA,MAC7D,SAAS,CAAC,MAAM,eAAe;AAAA,MAC/B,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,kBAAkB,IAAI;AAAA,MACxE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,mBAAmB,CAAC;AAAA,MAC7D,SAAS,CAAC,MAAM,gBAAgB;AAAA,MAChC,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,iBAAiB,IAAI;AAAA,MACvE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,mBAAmB,CAAC;AAAA,MAC7D,SAAS,CAAC,MAAM,eAAe;AAAA,MAC/B,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,eAAe,YAAY;AAAA,MAC7E,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,kBAAkB;AAAA,MAC3D,SAAS,CAAC,eAAe,IAAI;AAAA,MAC7B,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,gBAAgB,aAAa;AAAA,MAC/E,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,mBAAmB;AAAA,MAC5D,SAAS,CAAC,gBAAgB,IAAI;AAAA,MAC9B,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,aAAa,UAAU;AAAA,MACzE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,kBAAkB;AAAA,MAC3D,SAAS,CAAC,aAAa,MAAM;AAAA,MAC7B,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,SAAS,OAAO;AAAA,MAClE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,aAAa;AAAA,MACtD,SAAS,CAAC,OAAO;AAAA,MACjB,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,SAAS,OAAO;AAAA,MAClE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,kBAAkB;AAAA,MAC3D,SAAS,CAAC,SAAS,YAAY;AAAA,MAC/B,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,SAAS,OAAO;AAAA,MAClE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,aAAa;AAAA,MACtD,SAAS,CAAC,OAAO;AAAA,MACjB,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,cAAc,MAAM;AAAA,MACtE,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,mBAAmB;AAAA,MAC5D,SAAS,CAAC,MAAM;AAAA,MAChB,UAAU;AAAA,IACd;AAAA,IACA;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,EAAmB,EAAI,IAAI,CAAe,GAAG,eAAe,SAAS;AAAA,MAC1E,SAAS,MAAM,EAAI,IAAI,CAAW,EAAE,KAAK,UAAU;AAAA,MACnD,SAAS,CAAC,WAAW,IAAI;AAAA,MACzB,UAAU;AAAA,IACd;AAAA,EAAA,GAGE,IAAY,EAAM,MAAM,CAAC,EAAE,kBAAkB;AAE5C,SAAA,EACF,OAAO,CAAC,MAAW,CAAC,CAAC,EAAM,EAAO,aAAa,EAAO,QAAQ,KAAK,CAAC,MAAY,EAAQ,SAAS,CAAS,CAAC,CAAC,EAC5G,IAAI,CAAC,EAAE,YAAS,gBAAa,QAAa,CAAM;AACzD,GAEa,IAAwB,CAAC,MAC3B,CAAC,EAAE,YAAS,oBACV,IAEA,IAID,EAAQ,WAAW,GAAG,IACf,MAAY,MACb;AAAA,EACI,aAAa;AAAA,EACb,SAAS,EAAe,CAAG;AAAA,IAE/B;AAAA,EACI,SAAS,EAAe,GAAK,CAAO;AAAA,IAI3C,OAdI,EAAE,aAAa,0CAHF,MC1G1B,IAAmB,CAAC,GAA4B,EAAE,aAAmB;AACjE,QAAA,IAAU,CAAC,GAAc,IAAU,MAAM,EAAa,IAAI,GAAY,CAAC,GAAO,CAAO,CAAC,GACtF,IAAa,EAAa,IAAI,GAAW,YAAY;AAEpD,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAKgB;AAAA;AAAA,qBAEN,EAAQ,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3C,GAEM,IAAmB,CAAC,GAAiB,EAAE,aAAmB;AAAA;AAAA;AAAA;AAAA,GAMnD,IAAc,CAAC,GAAgB,MACjC;AAAA,EACH,eAAe,CAAC,GAAe,MACvB,IAAO,aAGP,eAAmB,kBAInB,CAAC,CAAC,WAAW,aAAa,OAAO,EAAE,SAAS,EAAM,GAAG;AAAA,EAM7D,aAAa,CAAC,MAAuB;AAC3B,UAAA,IAAY,EAAe,CAAC,EAAE,cAAW,EAAK,SAAS,WAAW,EAAE,EAAM,SAAS,GACnF,IAAe,EAAM,QAAQ,KAC/B,CAAC,MAAO,EAAiC,QAAQ,kBACrD,GACM,IAA6B,uBAAc,SAAS;AAOtD,QANA,KAAe,QAAQ,EAAY,KAAK,EAAM,UAAU,MAAM,EAAM,UAAU,EAAE,EAAE,SAAS,KAM3F,CAAC,KACD,EAAU,KAAK,aAAa,KAC5B,EAAM,UAAU,MAAM,iBAAiB,EAAU,KAAK,YAAY,UACjE,EAAU,KAAK,cAAc,EAAU,KAAK,WAAW,KAAK,SAAS;AAEtE,eAAO,MAAM,GACN;AAGX,UAAM,EAAE,gBAAa,eAAY,EAAO,OAAO;AAAA,MAC3C,YAAY,EAAM,UAAU,MAAM,KAAK,EAAM,UAAU,MAAM,QAAQ,CAAC;AAAA,MACtE,YAAY,EAAM,UAAU,MAAM,UAAU;AAAA,MAC5C,SAAS,EAAU,KAAK;AAAA,MACxB;AAAA,IAAA,CACH;AAED,QAAI,CAAC;AACM,aAAA;AAGL,UAAA,IAAmB,CAAC,GAAc,MAAsC;AAC1E,YAAM,IAAM,EAAU;AACf,aAAA,EAAc,OAAO,EAAM,KAAK;AAAA,QACnC,EAAW,KAAK,GAAK,IAAM,EAAU,KAAK,UAAU;AAAA,UAChD,OAAO,EAAU,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,UAC1C,aAAa;AAAA,QAAA,CAChB;AAAA,MAAA,CACJ;AAAA,IAAA,GAGC,IAAa,EAAM,SAAS,CAAC,MAAY,EAAiB,EAAM,cAAc,CAAO,CAAC,GACtF,IAAa,EAAM,SAAS,CAAC,MAAY,EAAiB,EAAM,cAAc,CAAO,CAAC;AAE5F,WAAI,EAAQ,SACD,EAAiB,GAAa,CAAC,GAAY,GAAY,cAAc,UAAU,CAAC,IAGpF,EAAiB,GAAa,CAAC,GAAY,YAAY,CAAC;AAAA,EACnE;AAAA,ICvFK,IAAkB,CAAC,MAAmC;AAAA,EAC/D,IAAI,EAAO;AAAA,EACX,GAAG,EAAO;AAAA,EACV,SAAS,EAAqB,EAAO,OAAO;AAChD,ICXM,IAAkB,MACb;AAAA,EACH,aAAa;AAAA,EACb,SAAS,CAAC;AAAA,IAML,IAAe,CAAC,MAAiC;AAC1D,QAAM,IAAY;AAEX,SAAA;AAAA,IACH,KAAK,MAAM;AAAA,IACX,OAAO,MAAM;AACT,QAAU,cAAc,MACxB,EAAU,UAAU;IACxB;AAAA,IACA,QAAQ,CAAC,MAA6C;;AAC5C,YAAA,IAAS,EAAQ,CAAa;AAC1B,eAAA,cAAc,4BAAQ,gBAAR,WAAuB,MAC/C,EAAU,UAAmB,6BAAA,YAAA,WAAW,IAAI,IAAI,CAAe,GACxD;AAAA,IACX;AAAA,IACA,SAAS,MAAM,EAAU,QAAQ,WAAW;AAAA,EAAA;AAEpD,GCzBa,IAAiB,CAAC,GAAgB,GAA8B,MAAkC;AACrG,QAAA,EAAE,eAAY,EAAO,IAAI;AAE3B,MAAA,CAAC,EAAQ;AACO,aAAA,UAAU,IAAI,MAAM,GAC7B;AAQX,OALgB,EAAA,WAAW,QAAQ,CAAC,MAAU;AACpC,MAAA,oBAAoB,cAAc,EAAU,UAAU,GACtD,EAAA,oBAAoB,cAAc,EAAU,UAAU;AAAA,EAAA,CAC/D,GAEM,EAAgB;AACnB,MAAgB,WAAW;AAGvB,IAAA,QAAQ,CAAC,EAAE,WAAQ;AACrB,MAAA,UAAU,OAAO,QAAQ,GACzB,EAAA,iBAAiB,cAAc,EAAU,UAAU,GACnD,EAAA,iBAAiB,cAAc,EAAU,UAAU,GACrD,EAAgB,YAAY,CAAC;AAAA,EAAA,CAChC,GAEe,EAAA,UAAU,OAAO,MAAM;AAEvC,QAAM,IAAS,EAAQ;AACvB,SAAI,KACO,GAAA,EAAE,UAAU,IAAI,QAAQ,GAC/B,sBAAsB,MAAM;AACxB,MAAe,EAAO,GAAG;AAAA,MACrB,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACX;AAAA,EAAA,CACJ,IAGE;AACX,GC1Ca,IAAqB,MAAM;AACpC,MAAI,IAAY;AAET,SAAA;AAAA,IACH,QAAQ,MAAM;AAAA,IACd,MAAM,MAAM;AACI,UAAA;AAAA,IAChB;AAAA,IACA,QAAQ,MAAM;AACE,UAAA;AAAA,IAChB;AAAA,EAAA;AAER,GAGa,IAAkB,CAAC,MAA+B,MAAM;AACjE,IAAa,OAAO;AACxB,GAEa,IAAmB,CAAC,GAAgB,MAA+B,CAAC,MAAkB;AAC/F,MAAI,EAAa,OAAO;AAAG;AACrB,QAAA,EAAE,eAAY,EAAO,IAAI,GACzB,IAAS,EAAQ,UAAU,CAAC,MAAM,EAAE,EAAE,UAAU,SAAS,QAAQ,CAAC,GAClE,IAAU,EAAQ;AACpB,EAAA,KAAW,KAAU,KACb,EAAA,EAAE,UAAU,OAAO,QAAQ;AAEvC,QAAM,EAAE,cAAW;AACnB,EAAwB,aAAA,eACjB,EAAA,UAAU,IAAI,QAAQ;AACjC,GAEa,KAAmB,MAAM,CAAC,MAAkB;AACrD,QAAM,EAAE,cAAW;AACnB,EAAwB,aAAA,eACjB,EAAA,UAAU,OAAO,QAAQ;AACpC,GAEa,KACT,CAAC,GAAgB,GAAkB,MACnC,CAAC,MAAmB;AAChB,QAAM,EAAE,cAAW;AAEnB,MADI,CAAoB,cAAA,gBACpB,CAAC;AAAM;AAEX,QAAM,IAAO,MAAM;AACf,MAAE,gBAAgB,GAClB,EAAE,eAAe;AAAA,EAAA,GAGf,EAAE,eAAY,EAAO,IAAI,GAEzB,IAAK,OAAO,OAAO,CAAO,EAAE,KAAK,CAAC,EAAE,WAAQ,EAAE,SAAS,CAAM,CAAC;AACpE,MAAI,CAAC,GAAI;AACL,QAAI,EAAO,QAAQ;AAAG;AAEtB,MAAO,MAAM,GACG,EAAA,UAAU,IAAI,MAAM,GAC/B;AAEL;AAAA,EACJ;AAEK,OACL,EAAG,QAAQ,EAAK,OAAO,EAAK,UAAU,CAAI;AAC9C,GAES,KACT,CAAC,GAAgB,GAAkB,GAA8B,MAA+B,CAAC,MAAa;AAC1G,MAAI,CAAe,cAAA;AAAgB;AAC/B,EAAC,EAAa,OAAO,KAAG,EAAa,KAAK;AAE9C,QAAM,EAAE,WAAQ;AAEZ,MADA,EAAO,QAAQ,KACf,CAAC,CAAC,aAAa,WAAW,SAAS,QAAQ,EAAE,SAAS,CAAG;AAAG;AAE1D,QAAA,EAAE,eAAY,EAAO,IAAI;AAE3B,MAAA,IAAS,EAAQ,UAAU,CAAC,EAAE,WAAQ,EAAE,UAAU,SAAS,QAAQ,CAAC;AACxE,EAAI,IAAS,KAAY,KAAA;AAEnB,QAAA,IAAa,CAAC,MAAiB;AACjC,UAAM,IAAU,EAAQ,IAClB,IAAQ,EAAQ;AAClB,IAAA,CAAC,KAAW,CAAC,KACT,GAAA,EAAE,UAAU,OAAO,QAAQ,GAC7B,EAAA,EAAE,UAAU,IAAI,QAAQ,GAC9B,EAAe,EAAM,GAAG;AAAA,MACpB,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,CACX;AAAA,EAAA;AAGL,MAAI,MAAQ,aAAa;AACrB,UAAM,IAAO,MAAW,EAAQ,SAAS,IAAI,IAAI,IAAS;AAE1D,MAAW,CAAI;AACf;AAAA,EACJ;AAEA,MAAI,MAAQ,WAAW;AACnB,UAAM,IAAO,MAAW,IAAI,EAAQ,SAAS,IAAI,IAAS;AAE1D,MAAW,CAAI;AACf;AAAA,EACJ;AAEA,MAAI,MAAQ,UAAU;AAClB,QAAI,EAAO,QAAQ;AAAG;AAEtB,MAAO,MAAM,GACG,EAAA,UAAU,IAAI,MAAM;AACpC;AAAA,EACJ;AAEA,QAAM,IAAU,EAAQ;AACxB,EAAI,CAAC,KACL,GAAQ,QAAQ,EAAK,OAAO,EAAK,UAAU,CAAI,GACvC,EAAA,EAAE,UAAU,OAAO,QAAQ;AACvC,GC7GE,KAAoB,CAAC,GAAkB,MAAiC;AAC1E,IAAsB,GAAM,GAAiB,CAAC,GAAU,GAAQ,MAAW;AACvE,UAAM,IAAU,EAAgB;AAChC,QAAI,CAAC;AACD,YAAM,EAAmB;AAGzB,QAAA,IAAO,EAAS,OAAO,EAAO,MAC9B,IAAM,EAAS,SAAS,EAAO,MAAM,KAAK,EAAQ;AAMtD,QAJI,IAAO,KACA,KAAA,IAGP,EAAO,SAAS,EAAO,MAAM,EAAS,SAAS,EAAO,QAAQ;AACxD,YAAA,IAAY,EAAS,MAAM,EAAO,MAAM,EAAO,SAAS,KAAK,EAAQ;AAC3E,MAAI,IAAY,KACN,KAAA;AAAA,IAEd;AACO,WAAA,CAAC,GAAK,CAAI;AAAA,EAAA,CACpB;AACL,GAEa,KAAa,CAAC,GAAgB,GAAkB,GAAmB,MAAsB;AAC5F,QAAA,IAAU,EAAK,IAAI;AACzB,MAAI,CAAC;AAAS,WAAO;AAEf,QAAA,IAAkB,EAAe,GAAO,CAAS,GACjD,IAAe;AACrB,IAAQ,YAAY,CAAe;AAE7B,QAAA,IAAa,EAAgB,CAAY,GACzC,IAAa,GAAY,GAAQ,GAAM,CAAe,GACtD,IAAW,GAAc,GAAQ,GAAM,GAAiB,CAAY,GACpE,IAAc,EAAiB,GAAQ,CAAY,GACnD,IAAc;AAEZ,WAAA,iBAAiB,aAAa,CAAU,GACxC,EAAA,iBAAiB,aAAa,CAAU,GACxC,EAAA,iBAAiB,WAAW,CAAQ,GAErC;AAAA,IACH,QAAQ,CAAC,MAAqB;AAM1B,MAAI,CALS,EAAe,GAAQ,GAAiB;AAAA,QACjD,YAAY;AAAA,QACZ,YAAY;AAAA,MAAA,CACf,KAID,GAAkB,GAAM,CAAe;AAAA,IAC3C;AAAA,IAEA,SAAS,MAAM;AACH,QAAA,oBAAoB,aAAa,CAAU,GAC3C,EAAA,oBAAoB,aAAa,CAAU,GAC3C,EAAA,oBAAoB,WAAW,CAAQ,GAC/C,EAAgB,OAAO;AAAA,IAC3B;AAAA,EAAA;AAER,GCtEa,KAAM,kBAEN,KAAoB,CAAC,GAAmB,GAA8B,MAAsB;AAC/F,QAAA,IAAS,EAAa,CAAO;AAEnC,SAAO,IAAI,EAAO;AAAA,IACd,KAAK,IAAI,EAAU,EAAG;AAAA,IACtB,OAAO,EAAY,GAAQ,CAAK;AAAA,IAChC,MAAM,CAAC,MAAS,GAAW,GAAQ,GAAM,GAAO,CAAS;AAAA,EAAA,CAC5D;AACL,GCHa,KAAc,EAA8B,CAAC,GAAO,MAAY;;AACnE,QAAA,IAAc,4BAAS,WAAT,WAAmB;AAEhC,SAAA;AAAA,IACH,cAAc,CAAC,GAAG,MAAQ;AAChB,YAAA,IAAS,EAAY,CAAG;AAI9B,aAAO,CAFQ,GAAkB,GAAO,GAAQ,gBAAgB,CAElD;AAAA,IAClB;AAAA,EAAA;AAER,CAAC,GAEY,KAAQ,EAAS,OAAO,CAAC,GAAA,CAAa,CAAC;"}