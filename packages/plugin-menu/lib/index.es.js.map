{"version":3,"file":"index.es.js","sources":["../src/default-config.ts","../src/button.ts","../src/divider.ts","../src/select.ts","../src/manager.ts","../src/menubar.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createCmdKey } from '@milkdown/core';\nimport { setBlockType, wrapIn } from '@milkdown/prose/commands';\nimport { redo, undo } from '@milkdown/prose/history';\nimport { MarkType } from '@milkdown/prose/model';\nimport { liftListItem, sinkListItem } from '@milkdown/prose/schema-list';\nimport { EditorState, TextSelection } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\n\nimport { ButtonConfig } from './button';\nimport { SelectConfig } from './select';\n\nexport type CommonConfig = {\n    disabled?: (view: EditorView) => boolean;\n};\n\nexport type ConfigItem = SelectConfig | ButtonConfig;\n\nexport type Config = Array<Array<ConfigItem>>;\n\nconst hasMark = (state: EditorState, type: MarkType | undefined): boolean => {\n    if (!type) return false;\n    const { from, $from, to, empty } = state.selection;\n    if (empty) {\n        return !!type.isInSet(state.storedMarks || $from.marks());\n    }\n    return state.doc.rangeHasMark(from, to, type);\n};\n\nexport const SelectParent = createCmdKey('SelectParent');\nexport const defaultConfig: Config = [\n    [\n        {\n            type: 'button',\n            icon: 'undo',\n            key: 'Undo',\n            disabled: (view) => {\n                return !undo(view.state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'redo',\n            key: 'Redo',\n            disabled: (view) => {\n                return !redo(view.state);\n            },\n        },\n    ],\n    [\n        {\n            type: 'select',\n            text: 'Heading',\n            options: [\n                { id: '1', text: 'Large Heading' },\n                { id: '2', text: 'Medium Heading' },\n                { id: '3', text: 'Small Heading' },\n                { id: '0', text: 'Plain Text' },\n            ],\n            disabled: (view) => {\n                const { state } = view;\n                const heading = state.schema.nodes['heading'];\n                if (!heading) return true;\n                const setToHeading = (level: number) => setBlockType(heading, { level })(state);\n                return (\n                    !(view.state.selection instanceof TextSelection) ||\n                    !(setToHeading(1) || setToHeading(2) || setToHeading(3))\n                );\n            },\n            onSelect: (id) => (Number(id) ? ['TurnIntoHeading', Number(id)] : ['TurnIntoText', null]),\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'bold',\n            key: 'ToggleBold',\n            active: (view) => hasMark(view.state, view.state.schema.marks['strong']),\n            disabled: (view) => !view.state.schema.marks['strong'],\n        },\n        {\n            type: 'button',\n            icon: 'italic',\n            key: 'ToggleItalic',\n            active: (view) => hasMark(view.state, view.state.schema.marks['em']),\n            disabled: (view) => !view.state.schema.marks['em'],\n        },\n        {\n            type: 'button',\n            icon: 'strikeThrough',\n            key: 'ToggleStrikeThrough',\n            active: (view) => hasMark(view.state, view.state.schema.marks['strike_through']),\n            disabled: (view) => !view.state.schema.marks['strike_through'],\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'bulletList',\n            key: 'WrapInBulletList',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['bullet_list'];\n                if (!node) return true;\n                return !wrapIn(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'orderedList',\n            key: 'WrapInOrderedList',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['ordered_list'];\n                if (!node) return true;\n                return !wrapIn(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'taskList',\n            key: 'TurnIntoTaskList',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['task_list_item'];\n                if (!node) return true;\n                return !wrapIn(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'liftList',\n            key: 'LiftListItem',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['list_item'];\n                if (!node) return true;\n                return !liftListItem(node)(state);\n            },\n        },\n        {\n            type: 'button',\n            icon: 'sinkList',\n            key: 'SinkListItem',\n            disabled: (view) => {\n                const { state } = view;\n                const node = state.schema.nodes['list_item'];\n                if (!node) return true;\n                return !sinkListItem(node)(state);\n            },\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'link',\n            key: 'ToggleLink',\n            active: (view) => hasMark(view.state, view.state.schema.marks['link']),\n        },\n        {\n            type: 'button',\n            icon: 'image',\n            key: 'InsertImage',\n        },\n        {\n            type: 'button',\n            icon: 'table',\n            key: 'InsertTable',\n        },\n        {\n            type: 'button',\n            icon: 'code',\n            key: 'TurnIntoCodeFence',\n        },\n    ],\n    [\n        {\n            type: 'button',\n            icon: 'quote',\n            key: 'WrapInBlockquote',\n        },\n        {\n            type: 'button',\n            icon: 'divider',\n            key: 'InsertHr',\n        },\n        {\n            type: 'button',\n            icon: 'select',\n            key: SelectParent,\n        },\n    ],\n];\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { CmdKey, commandsCtx, Ctx, getPalette, Icon, ThemeIcon } from '@milkdown/core';\nimport type { EditorView } from '@milkdown/prose/view';\nimport type { ThemeUtils } from '@milkdown/utils';\n\nimport type { CommonConfig } from './default-config';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ButtonConfig<T = any> = {\n    type: 'button';\n    icon: Icon;\n    active?: (view: EditorView) => boolean;\n    key: CmdKey<T> | string;\n    options?: T;\n} & CommonConfig;\n\nexport const button = (utils: ThemeUtils, config: ButtonConfig, ctx: Ctx) => {\n    const $button = document.createElement('button');\n    $button.setAttribute('type', 'button');\n    utils.themeManager.onFlush(() => {\n        $button.className = 'button';\n\n        const buttonStyle = utils.getStyle(({ css }) => {\n            const palette = getPalette(utils.themeManager);\n            return css`\n                border: 0;\n                box-sizing: unset;\n                width: 28px;\n                height: 28px;\n                padding: 4px;\n                margin: 8px;\n                flex-shrink: 0;\n                font-size: 14px;\n\n                display: flex;\n                justify-content: center;\n                align-items: center;\n\n                background-color: ${palette('surface')};\n                color: ${palette('solid')};\n                transition: color 0.4s ease-in-out, background-color 0.4s ease-in-out;\n\n                cursor: pointer;\n\n                &.active,\n                &:hover {\n                    background-color: ${palette('secondary', 0.12)};\n                    color: ${palette('primary')};\n                }\n\n                &:disabled {\n                    display: none;\n                }\n\n                .material-icons-outlined {\n                    font-size: 24px;\n                }\n            `;\n        });\n\n        if (buttonStyle) {\n            $button.classList.add(buttonStyle);\n        }\n    });\n\n    const $icon = utils.themeManager.get(ThemeIcon, config.icon);\n    if ($icon) {\n        const { label, dom } = $icon;\n        if (label) {\n            $button.setAttribute('aria-label', label);\n            $button.setAttribute('title', label);\n        }\n        $button.appendChild(dom);\n    } else {\n        $button.setAttribute('aria-label', config.icon);\n        $button.setAttribute('title', config.icon);\n        $button.textContent = config.icon;\n    }\n\n    $button.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        ctx.get(commandsCtx).call(config.key, config.options);\n    });\n    return $button;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { ThemeColor, ThemeSize } from '@milkdown/core';\nimport { ThemeUtils } from '@milkdown/utils';\n\nexport type DividerConfig = {\n    type: 'divider';\n    group: HTMLElement[];\n};\nexport const divider = (utils: ThemeUtils) => {\n    const $divider = document.createElement('div');\n    $divider.classList.add('divider');\n    const { themeManager } = utils;\n    themeManager.onFlush(() => {\n        const dividerStyle = utils.getStyle(({ css }) => {\n            return css`\n                flex-shrink: 0;\n                width: ${themeManager.get(ThemeSize, 'lineWidth')};\n                background-color: ${themeManager.get(ThemeColor, ['line'])};\n                margin: 12px 16px;\n                min-height: 24px;\n            `;\n        });\n        if (dividerStyle) {\n            $divider.classList.add(dividerStyle);\n        }\n    });\n    return $divider;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport {\n    CmdKey,\n    Color,\n    commandsCtx,\n    Ctx,\n    ThemeBorder,\n    ThemeColor,\n    ThemeIcon,\n    ThemeShadow,\n    ThemeSize,\n} from '@milkdown/core';\nimport { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport type { CommonConfig } from './default-config';\n\ntype SelectOptions = {\n    id: string;\n    text: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type SelectConfig<T = any> = {\n    type: 'select';\n    text: string;\n    options: SelectOptions[];\n    active?: (view: EditorView) => string;\n    onSelect: (id: string, view: EditorView) => [key: CmdKey<T> | string, payload?: T];\n} & CommonConfig;\n\nexport const select = (utils: ThemeUtils, config: SelectConfig, ctx: Ctx, view: EditorView) => {\n    const selectorWrapper = document.createElement('div');\n    selectorWrapper.classList.add('menu-selector-wrapper', 'fold');\n\n    const selector = document.createElement('button');\n    selector.setAttribute('type', 'button');\n    selector.classList.add('menu-selector', 'fold');\n    selector.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        selectorWrapper.classList.toggle('fold');\n        const wrapperRect = selectorWrapper.getBoundingClientRect();\n        selectorList.style.left = `${wrapperRect.left - (view.dom.parentElement?.getBoundingClientRect().left || 0)}px`;\n        const border = utils.themeManager.get(ThemeSize, 'lineWidth');\n        selectorList.style.top = `calc(${wrapperRect.height + 'px'} + ${border} * 2)`;\n    });\n    view.dom.addEventListener('click', () => {\n        selectorWrapper.classList.add('fold');\n    });\n\n    const selectorValue = document.createElement('span');\n    selectorValue.classList.add('menu-selector-value');\n    selectorValue.textContent = config.text;\n\n    const selectorButton = utils.themeManager.get(ThemeIcon, 'downArrow')?.dom;\n\n    selectorWrapper.appendChild(selector);\n    selector.appendChild(selectorValue);\n    if (selectorButton) {\n        selectorButton.setAttribute('aria-hidden', 'true');\n        selector.appendChild(selectorButton);\n    }\n\n    const selectorList = document.createElement('div');\n    selectorList.classList.add('menu-selector-list');\n    config.options.forEach((option) => {\n        const selectorListItem = document.createElement('button');\n        selectorListItem.setAttribute('type', 'button');\n        selectorListItem.dataset['id'] = option.id;\n        selectorListItem.textContent = option.text;\n        selectorListItem.classList.add('menu-selector-list-item');\n        selectorList.appendChild(selectorListItem);\n    });\n\n    selectorList.addEventListener('mousedown', (e) => {\n        const { target } = e;\n        if (target instanceof HTMLButtonElement && target.dataset['id']) {\n            const params = config.onSelect(target.dataset['id'], view);\n            const [key, payload] = params;\n            if (typeof key === 'string') {\n                ctx.get(commandsCtx).call(key, payload);\n            } else {\n                ctx.get(commandsCtx).call(key, payload);\n            }\n            selectorWrapper.classList.add('fold');\n        }\n    });\n\n    selectorWrapper.appendChild(selectorList);\n\n    const { themeManager } = utils;\n    themeManager.onFlush(() => {\n        const selectStyle = utils.getStyle(({ css }) => {\n            const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n            return css`\n                flex-shrink: 0;\n                font-weight: 500;\n                font-size: 14px;\n\n                ${themeManager.get(ThemeBorder, 'right')}\n                ${themeManager.get(ThemeBorder, 'left')}\n\n                .menu-selector {\n                    border: 0;\n                    box-sizing: unset;\n                    cursor: pointer;\n                    font: inherit;\n                    text-align: left;\n                    justify-content: space-between;\n                    align-items: center;\n                    color: ${palette('neutral', 0.87)};\n                    display: flex;\n                    padding: 4px;\n                    margin: 8px;\n                    height: 28px;\n                    background: ${palette('secondary', 0.12)};\n                    width: 160px;\n\n                    &:disabled {\n                        display: none;\n                    }\n                }\n\n                .menu-selector-value {\n                    flex: 1;\n                    white-space: nowrap;\n                    text-overflow: ellipsis;\n                }\n\n                .menu-selector-list {\n                    width: 184px;\n                    position: absolute;\n                    background: ${palette('surface')};\n                    ${themeManager.get(ThemeBorder, undefined)}\n                    ${themeManager.get(ThemeShadow, undefined)}\n                    border-bottom-left-radius: ${themeManager.get(ThemeSize, 'radius')};\n                    border-bottom-right-radius: ${themeManager.get(ThemeSize, 'radius')};\n                    z-index: 3;\n                }\n\n                .menu-selector-list-item {\n                    background-color: transparent;\n                    border: 0;\n                    cursor: pointer;\n                    display: block;\n                    font: inherit;\n                    text-align: left;\n                    padding: 12px 16px;\n                    line-height: 28px;\n                    width: 100%;\n                    color: ${palette('neutral', 0.87)};\n\n                    &:hover {\n                        background: ${palette('secondary', 0.12)};\n                        color: ${palette('primary')};\n                    }\n                }\n\n                &.fold {\n                    border-color: transparent;\n\n                    .menu-selector {\n                        background: unset;\n                    }\n\n                    .menu-selector-list {\n                        display: none;\n                    }\n                }\n            `;\n        });\n        if (selectStyle) {\n            selectorWrapper.classList.add(selectStyle);\n        }\n    });\n\n    return selectorWrapper;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx } from '@milkdown/core';\nimport { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nimport { button, ButtonConfig } from './button';\nimport { Config, ConfigItem } from './default-config';\nimport { divider, DividerConfig } from './divider';\nimport { select, SelectConfig } from './select';\n\ntype InnerConfig = (ConfigItem | DividerConfig) & { $: HTMLElement };\n\nexport class Manager {\n    private config: InnerConfig[];\n\n    constructor(\n        originalConfig: Config,\n        private utils: ThemeUtils,\n        private ctx: Ctx,\n        menu: HTMLElement,\n        view: EditorView,\n    ) {\n        this.config = originalConfig\n            .map((xs) =>\n                xs.map((x) => ({\n                    ...x,\n                    $: this.$create(x, view),\n                })),\n            )\n            .map((xs, i): Array<InnerConfig> => {\n                if (i === originalConfig.length - 1) {\n                    return xs;\n                }\n                const dividerConfig: DividerConfig = {\n                    type: 'divider',\n                    group: xs.map((x) => x.$),\n                };\n                return [...xs, { ...dividerConfig, $: this.$create(dividerConfig, view) }];\n            })\n            .flat();\n        this.config.forEach((x) => menu.appendChild(x.$));\n    }\n\n    public update(view: EditorView) {\n        this.config.forEach((config) => {\n            if (config.type === 'button') {\n                if (config.active) {\n                    const active = config.active(view);\n                    if (active) {\n                        config.$.classList.add('active');\n                    } else {\n                        config.$.classList.remove('active');\n                    }\n                }\n                if (config.disabled) {\n                    const disabled = config.disabled(view);\n                    if (disabled) {\n                        config.$.setAttribute('disabled', 'true');\n                    } else {\n                        config.$.removeAttribute('disabled');\n                    }\n                }\n                return;\n            }\n\n            if (config.type === 'select') {\n                if (config.disabled) {\n                    const disabled = config.disabled(view);\n                    const button = config.$.children[0];\n                    if (button) {\n                        if (disabled) {\n                            config.$.classList.add('disabled');\n                            button.setAttribute('disabled', 'true');\n                        } else {\n                            config.$.classList.remove('disabled');\n                            button.removeAttribute('disabled');\n                        }\n                    }\n                }\n            }\n\n            if (config.type === 'divider') {\n                const disabled = config.group.every(\n                    (x) => x.getAttribute('disabled') || x.classList.contains('disabled'),\n                );\n                if (disabled) {\n                    config.$.classList.add('disabled');\n                } else {\n                    config.$.classList.remove('disabled');\n                }\n            }\n        });\n    }\n\n    private $create(item: ButtonConfig | DividerConfig | SelectConfig, view: EditorView): HTMLElement {\n        const { utils, ctx } = this;\n\n        switch (item.type) {\n            case 'button': {\n                return button(utils, item, ctx);\n            }\n            case 'select': {\n                return select(utils, item, ctx, view);\n            }\n            case 'divider':\n            default: {\n                return divider(utils);\n            }\n        }\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx, rootCtx, ThemeBorder, ThemeColor, ThemeFont, ThemeScrollbar } from '@milkdown/core';\nimport { missingMenuWrapper, missingRootElement } from '@milkdown/exception';\nimport { EditorView } from '@milkdown/prose/view';\nimport { ThemeUtils } from '@milkdown/utils';\n\nexport type HandleDOMParams = {\n    menu: HTMLDivElement;\n    menuWrapper: HTMLDivElement;\n    editorRoot: HTMLElement;\n    milkdownDOM: HTMLElement;\n    editorDOM: HTMLDivElement;\n};\n\nexport type HandleDOM = (params: HandleDOMParams) => void;\n\nconst restore: HandleDOM = ({ menu, menuWrapper, milkdownDOM, editorRoot }) => {\n    editorRoot.appendChild(milkdownDOM);\n    menuWrapper.remove();\n    menu.remove();\n};\n\nconst defaultDOMHandler: HandleDOM = ({ menu, menuWrapper, milkdownDOM }) => {\n    menuWrapper.insertBefore(menu, milkdownDOM);\n};\n\nconst getRoot = (root: string | Node | null | undefined) => {\n    if (!root) return document.body;\n\n    if (typeof root === 'string') {\n        const el = document.querySelector(root);\n        if (el) return el;\n\n        return document.body;\n    }\n\n    return root;\n};\n\nexport const initWrapper = (ctx: Ctx, view: EditorView) => {\n    let _menuWrapper: HTMLDivElement | null = null;\n    _menuWrapper = document.createElement('div');\n    _menuWrapper.classList.add('milkdown-menu-wrapper');\n\n    const root = ctx.get(rootCtx);\n\n    const editorDOM = view.dom;\n    const editorRoot = getRoot(root) as HTMLElement;\n    const milkdownDOM = editorDOM.parentElement;\n\n    if (!milkdownDOM) {\n        throw missingRootElement();\n    }\n\n    editorRoot.replaceChild(_menuWrapper, milkdownDOM);\n    _menuWrapper.appendChild(milkdownDOM);\n    return _menuWrapper;\n};\n\nexport const menubar = (\n    utils: ThemeUtils,\n    view: EditorView,\n    ctx: Ctx,\n    menuWrapper: HTMLDivElement | null,\n    domHandler: HandleDOM = defaultDOMHandler,\n) => {\n    if (!menuWrapper) {\n        throw missingMenuWrapper();\n    }\n\n    const menu = document.createElement('div');\n    menu.classList.add('milkdown-menu');\n\n    const editorDOM = view.dom as HTMLDivElement;\n    const { themeManager } = utils;\n\n    themeManager.onFlush(() => {\n        const editorWrapperStyle = utils.getStyle(() => {\n            return themeManager.get(ThemeScrollbar, ['y']) as string;\n        });\n        if (editorWrapperStyle) {\n            editorDOM.classList.add(editorWrapperStyle);\n        }\n        const menuStyle = utils.getStyle(({ css }) => {\n            const border = themeManager.get(ThemeBorder, undefined);\n            const scrollbar = themeManager.get(ThemeScrollbar, ['x', 'thin']);\n            const style = css`\n                font-family: ${themeManager.get(ThemeFont, 'typography')};\n                box-sizing: border-box;\n                width: 100%;\n                display: flex;\n                flex-wrap: nowrap;\n                overflow-x: scroll;\n                ${border};\n                ${scrollbar};\n                overflow-y: hidden;\n                background: ${themeManager.get(ThemeColor, ['surface'])};\n                transition: background-color 0.4s ease-in-out;\n\n                -webkit-overflow-scrolling: auto;\n\n                .disabled {\n                    display: none;\n                }\n            `;\n            return style;\n        });\n        if (menuStyle) {\n            menuStyle.split(' ').forEach((x) => menu.classList.add(x));\n        }\n    });\n\n    const root = ctx.get(rootCtx);\n\n    const editorRoot = getRoot(root) as HTMLElement;\n    const milkdownDOM = editorDOM.parentElement;\n\n    if (!milkdownDOM) {\n        throw missingRootElement();\n    }\n\n    domHandler({\n        menu,\n        menuWrapper,\n        editorDOM,\n        editorRoot,\n        milkdownDOM,\n    });\n\n    const restoreDOM = () => {\n        restore({\n            menu,\n            menuWrapper,\n            editorDOM,\n            editorRoot,\n            milkdownDOM,\n        });\n        return milkdownDOM;\n    };\n\n    return [menu, restoreDOM] as const;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, Ctx, rootDOMCtx } from '@milkdown/core';\nimport { selectParentNode } from '@milkdown/prose/commands';\nimport { Plugin, PluginKey } from '@milkdown/prose/state';\nimport { EditorView } from '@milkdown/prose/view';\nimport { AtomList, createPlugin } from '@milkdown/utils';\n\nimport { Config, defaultConfig, SelectParent } from './default-config';\nimport { Manager } from './manager';\nimport { HandleDOM, initWrapper, menubar } from './menubar';\n\nexport const menuKey = new PluginKey('MILKDOWN_MENU');\n\nexport * from './default-config';\nexport type { HandleDOM, HandleDOMParams } from './menubar';\n\nexport type Options = {\n    config: Config | ((ctx: Ctx) => Config);\n    domHandler: HandleDOM;\n};\n\nexport const menuPlugin = createPlugin<string, Options>((utils, options) => {\n    const domHandler = options?.domHandler;\n\n    let restoreDOM: (() => void) | null = null;\n    let menu: HTMLDivElement | null = null;\n    let menuWrapper: HTMLDivElement | null = null;\n    let manager: Manager | null = null;\n\n    const initIfNecessary = (ctx: Ctx, editorView: EditorView) => {\n        const config: Config = options?.config\n            ? typeof options.config === 'function'\n                ? options.config(ctx)\n                : options.config\n            : defaultConfig;\n\n        if (!editorView.editable) {\n            return;\n        }\n\n        if (!menuWrapper) {\n            menuWrapper = initWrapper(ctx, editorView);\n            ctx.set(rootDOMCtx, menuWrapper);\n        }\n\n        if (!menu) {\n            const [_menu, _restoreDOM] = menubar(utils, editorView, ctx, menuWrapper, domHandler);\n            menu = _menu;\n            restoreDOM = () => {\n                const milkdownDOM = _restoreDOM();\n                menuWrapper = null;\n                menu = null;\n                manager = null;\n                restoreDOM = null;\n                ctx.set(rootDOMCtx, milkdownDOM);\n            };\n        }\n\n        if (!manager) {\n            manager = new Manager(config, utils, ctx, menu, editorView);\n        }\n    };\n\n    return {\n        commands: () => [createCmd(SelectParent, () => selectParentNode)],\n        prosePlugins: (_, ctx) => {\n            const plugin = new Plugin({\n                key: menuKey,\n                view: (editorView) => {\n                    initIfNecessary(ctx, editorView);\n                    if (editorView.editable) {\n                        manager?.update(editorView);\n                    }\n                    return {\n                        update: (view) => {\n                            initIfNecessary(ctx, editorView);\n                            if (editorView.editable) {\n                                manager?.update(view);\n                            } else {\n                                restoreDOM?.();\n                            }\n                        },\n                        destroy: () => {\n                            restoreDOM?.();\n                        },\n                    };\n                },\n            });\n\n            return [plugin];\n        },\n    };\n});\n\nexport const menu = AtomList.create([menuPlugin()]);\n"],"names":[],"mappings":"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"}