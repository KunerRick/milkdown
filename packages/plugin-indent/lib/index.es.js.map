{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createCmdKey } from '@milkdown/core';\nimport { keymap } from '@milkdown/prose/keymap';\nimport { AllSelection, TextSelection, Transaction } from '@milkdown/prose/state';\nimport { AtomList, createPlugin, ThemeUtils } from '@milkdown/utils';\n\nexport type Options = {\n    type: 'space' | 'tab';\n    size: number;\n};\n\nconst updateIndent = (tr: Transaction, options: Options): Transaction => {\n    const { doc, selection } = tr;\n\n    if (!doc || !selection) return tr;\n\n    if (!(selection instanceof TextSelection || selection instanceof AllSelection)) {\n        return tr;\n    }\n\n    const { to } = selection;\n\n    const text = options.type === 'space' ? Array(options.size).fill(' ').join('') : '\\t';\n\n    return tr.insertText(text, to);\n};\n\nconst applyStyle = (options: Options, utils: ThemeUtils): void => {\n    if (options.type === 'tab') {\n        utils.getStyle(\n            ({ injectGlobal }) => injectGlobal`\n                .milkdown {\n                    tab-size: ${options.size};\n                }\n            `,\n        );\n    }\n};\n\nexport const Indent = createCmdKey<boolean>('Indent');\n\nexport const indentPlugin = createPlugin<string, Options>((utils, options) => ({\n    prosePlugins: () => {\n        const config: Options = {\n            type: 'tab',\n            size: 4,\n            ...(options ?? {}),\n        };\n\n        utils.themeManager.onFlush(() => {\n            applyStyle(config, utils);\n        });\n\n        const plugin = keymap({\n            Tab: (state, dispatch) => {\n                const { tr } = state;\n                const _tr = updateIndent(tr, config);\n\n                if (_tr.docChanged) {\n                    dispatch?.(_tr);\n                    return true;\n                }\n\n                return false;\n            },\n        });\n        return [plugin];\n    },\n}));\n\nexport const indent = AtomList.create([indentPlugin()]);\n"],"names":[],"mappings":";;;;AAYA,MAAM,IAAe,CAAC,GAAiB,MAAkC;AAC/D,QAAA,EAAE,QAAK,iBAAc;AAI3B,MAFI,CAAC,KAAO,CAAC,KAET,CAAE,cAAqB,KAAiB,aAAqB;AACtD,WAAA;AAGX,QAAM,EAAE,UAAO,GAET,IAAO,EAAQ,SAAS,UAAU,MAAM,EAAQ,IAAI,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,IAAI;AAE1E,SAAA,EAAG,WAAW,GAAM,CAAE;AACjC,GAEM,IAAa,CAAC,GAAkB,MAA4B;AAC1D,EAAA,EAAQ,SAAS,SACX,EAAA,SACF,CAAC,EAAE,sBAAmB;AAAA;AAAA,gCAEF,EAAQ;AAAA;AAAA,aAGhC;AAER,GAEa,IAAS,EAAsB,QAAQ,GAEvC,IAAe,EAA8B,CAAC,GAAO,MAAa;AAAA,EAC3E,cAAc,MAAM;AAChB,UAAM,IAAkB;AAAA,MACpB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,GAAI,gBAAW,CAAC;AAAA,IAAA;AAGd,aAAA,aAAa,QAAQ,MAAM;AAC7B,QAAW,GAAQ,CAAK;AAAA,IAAA,CAC3B,GAeM,CAbQ,EAAO;AAAA,MAClB,KAAK,CAAC,GAAO,MAAa;AACtB,cAAM,EAAE,UAAO,GACT,IAAM,EAAa,GAAI,CAAM;AAEnC,eAAI,EAAI,aACJ,gBAAW,IACJ,MAGJ;AAAA,MACX;AAAA,IAAA,CACH,CACa;AAAA,EAClB;AACJ,EAAE,GAEW,IAAS,EAAS,OAAO,CAAC,EAAA,CAAc,CAAC;"}